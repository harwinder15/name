[{"/home/dell/Documents/Market/src/index.js":"1","/home/dell/Documents/Market/src/serviceWorker.js":"2","/home/dell/Documents/Market/src/components/app.js":"3","/home/dell/Documents/Market/src/store/index.js":"4","/home/dell/Documents/Market/src/components/menu/ScrollToTop.js":"5","/home/dell/Documents/Market/src/components/pages/exploreGrey.js":"6","/home/dell/Documents/Market/src/components/pages/home2Grey.js":"7","/home/dell/Documents/Market/src/components/menu/header.js":"8","/home/dell/Documents/Market/src/components/pages/wallet.js":"9","/home/dell/Documents/Market/src/components/pages/Author.js":"10","/home/dell/Documents/Market/src/components/pages/AuthorGrey.js":"11","/home/dell/Documents/Market/src/components/pages/createMultiple.js":"12","/home/dell/Documents/Market/src/components/pages/createOptions.js":"13","/home/dell/Documents/Market/src/components/pages/createSingle.js":"14","/home/dell/Documents/Market/src/components/pages/Profile/index.js":"15","/home/dell/Documents/Market/src/core/auth/index.js":"16","/home/dell/Documents/Market/src/components/Styles.js":"17","/home/dell/Documents/Market/src/apiServices.js":"18","/home/dell/Documents/Market/src/core/api.js":"19","/home/dell/Documents/Market/src/Config/contracts.js":"20","/home/dell/Documents/Market/src/components/components/ColumnNewRedux.js":"21","/home/dell/Documents/Market/src/components/components/Particle.js":"22","/home/dell/Documents/Market/src/components/components/TopFilterBar.js":"23","/home/dell/Documents/Market/src/components/components/footer.js":"24","/home/dell/Documents/Market/src/components/components/SliderMainParticleGrey.js":"25","/home/dell/Documents/Market/src/components/components/FeatureBox.js":"26","/home/dell/Documents/Market/src/components/components/CarouselCollectionRedux.js":"27","/home/dell/Documents/Market/src/components/components/CarouselNewRedux.js":"28","/home/dell/Documents/Market/src/components/components/AuthorListRedux.js":"29","/home/dell/Documents/Market/src/components/components/wallet.js":"30","/home/dell/Documents/Market/src/components/components/Clock.js":"31","/home/dell/Documents/Market/src/helpers/constants.js":"32","/home/dell/Documents/Market/src/helpers/getterFunctions.js":"33","/home/dell/Documents/Market/src/helpers/sendFunctions.js":"34","/home/dell/Documents/Market/src/components/menu/AccountModal/Accountmodal.jsx":"35","/home/dell/Documents/Market/src/store/reducers/index.js":"36","/home/dell/Documents/Market/src/core/auth/request.js":"37","/home/dell/Documents/Market/src/store/selectors/index.js":"38","/home/dell/Documents/Market/src/store/actions/thunks/index.js":"39","/home/dell/Documents/Market/src/store/utils.js":"40","/home/dell/Documents/Market/src/components/components/NftCard.js":"41","/home/dell/Documents/Market/src/components/components/NftMusicCard.js":"42","/home/dell/Documents/Market/src/components/components/UserTopSeller.js":"43","/home/dell/Documents/Market/src/components/components/CustomSlide.js":"44","/home/dell/Documents/Market/src/components/menu/AccountModal/networks.js":"45","/home/dell/Documents/Market/src/components/components/constants/filters.js":"46","/home/dell/Documents/Market/src/store/reducers/hotCollections.js":"47","/home/dell/Documents/Market/src/store/reducers/nfts.js":"48","/home/dell/Documents/Market/src/store/reducers/accountState.js":"49","/home/dell/Documents/Market/src/store/reducers/blogs.js":"50","/home/dell/Documents/Market/src/store/reducers/filters.js":"51","/home/dell/Documents/Market/src/store/reducers/authorList.js":"52","/home/dell/Documents/Market/src/components/menu/AccountModal/popupModal.jsx":"53","/home/dell/Documents/Market/src/store/actions/index.js":"54","/home/dell/Documents/Market/src/components/components/constants/index.js":"55","/home/dell/Documents/Market/src/store/actions/thunks/blogs.js":"56","/home/dell/Documents/Market/src/store/actions/thunks/contactUs.js":"57","/home/dell/Documents/Market/src/store/actions/thunks/hotCollections.js":"58","/home/dell/Documents/Market/src/store/actions/thunks/authorList.js":"59","/home/dell/Documents/Market/src/store/actions/thunks/nfts.js":"60","/home/dell/Documents/Market/src/redux/actions/index.js":"61","/home/dell/Documents/Market/src/store/constants/action-types.js":"62","/home/dell/Documents/Market/src/core/axios.js":"63","/home/dell/Documents/Market/src/redux/constants/action-types.js":"64","/home/dell/Documents/Market/src/components/pages/ItemDetail.js":"65"},{"size":1041,"mtime":1669104178000,"results":"66","hashOfConfig":"67"},{"size":4951,"mtime":1669027053000,"results":"68","hashOfConfig":"67"},{"size":2452,"mtime":1669118093318,"results":"69","hashOfConfig":"67"},{"size":213,"mtime":1669028001000,"results":"70","hashOfConfig":"67"},{"size":918,"mtime":1669027053000,"results":"71","hashOfConfig":"67"},{"size":3863,"mtime":1669118511013,"results":"72","hashOfConfig":"67"},{"size":2127,"mtime":1669120398133,"results":"73","hashOfConfig":"67"},{"size":7220,"mtime":1669115303974,"results":"74","hashOfConfig":"67"},{"size":1677,"mtime":1669027053000,"results":"75","hashOfConfig":"67"},{"size":5193,"mtime":1669027053000,"results":"76","hashOfConfig":"67"},{"size":4613,"mtime":1669027053000,"results":"77","hashOfConfig":"67"},{"size":43521,"mtime":1669119254118,"results":"78","hashOfConfig":"67"},{"size":2494,"mtime":1669027053000,"results":"79","hashOfConfig":"67"},{"size":42331,"mtime":1669113074487,"results":"80","hashOfConfig":"67"},{"size":14136,"mtime":1669027053000,"results":"81","hashOfConfig":"67"},{"size":2466,"mtime":1669027053000,"results":"82","hashOfConfig":"67"},{"size":5915,"mtime":1669098303000,"results":"83","hashOfConfig":"67"},{"size":25094,"mtime":1669102678000,"results":"84","hashOfConfig":"67"},{"size":559,"mtime":1669027053000,"results":"85","hashOfConfig":"67"},{"size":296,"mtime":1669028433000,"results":"86","hashOfConfig":"67"},{"size":2053,"mtime":1669118479401,"results":"87","hashOfConfig":"67"},{"size":2535,"mtime":1669027053000,"results":"88","hashOfConfig":"67"},{"size":3362,"mtime":1669108487000,"results":"89","hashOfConfig":"67"},{"size":5463,"mtime":1669027053000,"results":"90","hashOfConfig":"67"},{"size":3364,"mtime":1669027053000,"results":"91","hashOfConfig":"67"},{"size":3356,"mtime":1669027053000,"results":"92","hashOfConfig":"67"},{"size":1327,"mtime":1669027053000,"results":"93","hashOfConfig":"67"},{"size":3374,"mtime":1669178193000,"results":"94","hashOfConfig":"67"},{"size":863,"mtime":1669027053000,"results":"95","hashOfConfig":"67"},{"size":2696,"mtime":1669027053000,"results":"96","hashOfConfig":"67"},{"size":1726,"mtime":1669123130078,"results":"97","hashOfConfig":"67"},{"size":405,"mtime":1669028429000,"results":"98","hashOfConfig":"67"},{"size":2914,"mtime":1669028429000,"results":"99","hashOfConfig":"67"},{"size":3296,"mtime":1669028429000,"results":"100","hashOfConfig":"67"},{"size":16466,"mtime":1669029217000,"results":"101","hashOfConfig":"67"},{"size":609,"mtime":1669105940000,"results":"102","hashOfConfig":"67"},{"size":2107,"mtime":1669027053000,"results":"103","hashOfConfig":"67"},{"size":2162,"mtime":1669027053000,"results":"104","hashOfConfig":"67"},{"size":141,"mtime":1669027053000,"results":"105","hashOfConfig":"67"},{"size":1200,"mtime":1669027053000,"results":"106","hashOfConfig":"67"},{"size":3463,"mtime":1669027053000,"results":"107","hashOfConfig":"67"},{"size":3614,"mtime":1669027053000,"results":"108","hashOfConfig":"67"},{"size":772,"mtime":1669027053000,"results":"109","hashOfConfig":"67"},{"size":862,"mtime":1669027053000,"results":"110","hashOfConfig":"67"},{"size":2961,"mtime":1669028275000,"results":"111","hashOfConfig":"67"},{"size":1425,"mtime":1669027053000,"results":"112","hashOfConfig":"67"},{"size":871,"mtime":1669027053000,"results":"113","hashOfConfig":"67"},{"size":2019,"mtime":1669027053000,"results":"114","hashOfConfig":"67"},{"size":1481,"mtime":1669105790000,"results":"115","hashOfConfig":"67"},{"size":2125,"mtime":1669027053000,"results":"116","hashOfConfig":"67"},{"size":1756,"mtime":1669027053000,"results":"117","hashOfConfig":"67"},{"size":1320,"mtime":1669027053000,"results":"118","hashOfConfig":"67"},{"size":312,"mtime":1669028275000,"results":"119","hashOfConfig":"67"},{"size":2929,"mtime":1669104539000,"results":"120","hashOfConfig":"67"},{"size":5503,"mtime":1669027053000,"results":"121","hashOfConfig":"67"},{"size":1689,"mtime":1669027053000,"results":"122","hashOfConfig":"67"},{"size":334,"mtime":1669027053000,"results":"123","hashOfConfig":"67"},{"size":623,"mtime":1669027053000,"results":"124","hashOfConfig":"67"},{"size":994,"mtime":1669027053000,"results":"125","hashOfConfig":"67"},{"size":1582,"mtime":1669027053000,"results":"126","hashOfConfig":"67"},{"size":1029,"mtime":1669104254000,"results":"127","hashOfConfig":"67"},{"size":456,"mtime":1669104468000,"results":"128","hashOfConfig":"67"},{"size":116,"mtime":1669027053000,"results":"129","hashOfConfig":"67"},{"size":456,"mtime":1669104258000,"results":"130","hashOfConfig":"67"},{"size":12572,"mtime":1669115871869,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"zws5tp",{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"134"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"134"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"134"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"/home/dell/Documents/Market/src/index.js",[],["273","274"],"/home/dell/Documents/Market/src/serviceWorker.js",[],"/home/dell/Documents/Market/src/components/app.js",[],"/home/dell/Documents/Market/src/store/index.js",[],"/home/dell/Documents/Market/src/components/menu/ScrollToTop.js",[],"/home/dell/Documents/Market/src/components/pages/exploreGrey.js",["275","276","277","278","279"],"import React, { memo, useState, useEffect } from \"react\";\nimport ColumnNewRedux from \"../components/ColumnNewRedux\";\nimport Footer from \"../components/footer\";\nimport TopFilterBar from \"../components/TopFilterBar\";\n\n//*===================\nimport { GetOnSaleItems, GetSearchedNft } from \"../../apiServices\";\nimport { connect } from \"react-redux\";\nimport ipfsAPI from \"ipfs-api\";\n\n//*===================\n//IMPORT DYNAMIC STYLED COMPONENT\nimport { StyledHeader } from \"../Styles\";\n//SWITCH VARIABLE FOR PAGE STYLE\nconst theme = \"GREY\"; //LIGHT, GREY, RETRO\n\nconst ipfs = ipfsAPI(\"ipfs.infura.io\", \"5001\", {\n  protocol: \"https\",\n  auth: \"21w11zfV67PHKlkAEYAZWoj2tsg:f2b73c626c9f1df9f698828420fa8439\",\n});\n\nconst Explore = (props) => {\n  const [height, setHeight] = React.useState(0);\n  const [items, setItems] = useState([]);\n  const [likeEvent, setLikeEvent] = useState(false);\n  const onImgLoad = ({ target: img }) => {\n    let currentHeight = height;\n    if (currentHeight < img.offsetHeight) {\n      setHeight(img.offsetHeight);\n    }\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      console.log(\"propss\", props);\n      let data;\n      let itemsOnSale = [];\n\n      if (!props.searchedData) {\n        if (props.exploreSaleType?.exploreSaleType === -1) {\n          data = {\n            page: 1,\n            limit: 15,\n            conditions: {\n              oStatus: 1,\n            },\n          };\n        } else {\n          data = {\n            page: 1,\n            limit: 15,\n            conditions: {\n              oStatus: 1,\n              // oType: props.exploreSaleType?.exploreSaleType,\n              oType: 1,\n            },\n          };\n        }\n        itemsOnSale = await GetOnSaleItems(data);\n\n        if (props.nftType !== -1)\n          itemsOnSale.results[0] = itemsOnSale.results[0].filter((item) => {\n            return item.nType === props.nftType;\n          });\n      } else {\n        let reqParams = {\n          length: 48,\n          start: 0,\n          sTextsearch: props.searchedData,\n          sSellingType: \"\",\n          sSortingType: \"\",\n          page: 1,\n          limit: 10,\n        };\n        itemsOnSale = await GetSearchedNft(reqParams);\n      }\n      console.log(\"itemsOnSale\", itemsOnSale);\n      let localRes = [];\n      for (let i = 0; i < itemsOnSale?.results[0]?.length; i++) {\n        console.log(\"resssss111\", itemsOnSale.results[0][i].nHash);\n        let res = await ipfs.cat(itemsOnSale.results[0][i].nHash);\n        localRes[i] = res;\n        console.log(\"resssss\", res);\n        console.log(\"File content >> \", JSON.parse(res.toString(\"utf8\")));\n        console.log(\"res----->>\", res);\n      }\n\n      for (let i = 0; i < itemsOnSale?.results[0]?.length; i++) {\n        itemsOnSale.results[0][i].imageHash = JSON.parse(\n          localRes[i].toString(\"utf8\")\n        ).image;\n      }\n\n      setItems(\n        itemsOnSale && itemsOnSale.results ? itemsOnSale.results[0] : []\n      );\n    }\n\n    fetch();\n  }, [props]);\n  return (\n    <div className=\"greyscheme\">\n      <StyledHeader theme={theme} />\n      <section className=\"jumbotron breadcumb no-bg\">\n        <div className=\"mainbreadcumb\">\n          <div className=\"container\">\n            <div className=\"row m-10-hor\">\n              <div className=\"col-12\">\n                <h1 className=\"text-center\">Explore</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <TopFilterBar />\n          </div>\n        </div>\n        <ColumnNewRedux />\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n    token: state.token,\n    exploreSaleType: state.exploreSaleType,\n  };\n};\nexport default connect(mapStateToProps)(Explore);\n","/home/dell/Documents/Market/src/components/pages/home2Grey.js",[],"/home/dell/Documents/Market/src/components/menu/header.js",[],"/home/dell/Documents/Market/src/components/pages/wallet.js",[],"/home/dell/Documents/Market/src/components/pages/Author.js",[],"/home/dell/Documents/Market/src/components/pages/AuthorGrey.js",[],"/home/dell/Documents/Market/src/components/pages/createMultiple.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"import React, { useState, useEffect } from \"react\";\nimport Clock from \"../components/Clock\";\nimport Footer from \"../components/footer\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\n\n//*============================\nimport {\n  createNft,\n  createOrder,\n  getProfile,\n  getUsersCollections,\n  InsertHistory,\n  SetNFTOrder,\n  exportInstance,\n} from \"./../../apiServices\";\nimport { handleCollectionCreation } from \"../../helpers/sendFunctions\";\nimport { getSignature } from \"../../helpers/getterFunctions\";\nimport { options } from \"../../helpers/constants\";\nimport $ from \"jquery\";\nimport {\n  CURRENCY,\n  GENERAL_DATE,\n  GENERAL_TIMESTAMP,\n} from \"../../helpers/constants\";\nimport simplerERC721ABI from \"../../Config/abis/simpleERC721.json\";\nimport contracts from \"../../Config/contracts\";\nimport { ethers } from \"ethers\";\nimport { connect } from \"react-redux\";\n//*================\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  .mainside{\n    .connect-wal{\n      display: none;\n    }\n    .logout{\n      display: flex;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\nconst Createpage = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [files, setFiles] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [isActive1, setIsActive1] = useState(false);\n  const [isActive2, setIsActive2] = useState(false);\n  const [file, setFile] = useState();\n  const [count, setCount] = useState(0);\n  const [showResults, setShowResults] = React.useState(false);\n  const onClick = () => setShowResults(true);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const onChange = (e) => {\n    let files = e.target.files;\n    var filesArr = Array.prototype.slice.call(files);\n    document.getElementById(\"file_name\").style.display = \"none\";\n    setFiles({ files: [...files, ...filesArr] });\n  };\n  const [name, setName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [allData, setAllData] = useState([]);\n\n  //*======================\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const [symbol, setSymbol] = useState(\"\");\n  const [royalty, setRoyalty] = useState(0);\n  const [collections, setCollections] = useState([]);\n  const [nftContractAddress, setNftContractAddress] = useState(\"\");\n  const [nextId, setNextId] = useState(\"\");\n  const [nftImage, setNftImage] = useState(\"\");\n  const [propertyKeys, setPropertyKeys] = useState([]);\n  const [currPropertyKey, setCurrPropertyKey] = useState();\n  const [propertyValues, setPropertyValues] = useState([]);\n  const [currPropertyValue, setCurrPropertyValue] = useState();\n  const [collaborators, setCollaborators] = useState([]);\n  const [collaboratorPercents, setCollaboratorPercents] = useState([]);\n  const [nftTitle, setNftTitle] = useState(\"\");\n  const [saleType, setSaleType] = useState(0);\n  const [quantity, setQuantity] = useState(1);\n  const [salt, setSalt] = useState();\n  const [selectedTokenAddress, setSelectedTokenAddress] = useState();\n  const [endTime, setEndTime] = useState();\n  const [lockedContent, setLockedContent] = useState(\"\");\n  const [nftDesc, setNftDesc] = useState(\"\");\n  const [show3, setShow3] = useState(false);\n  const [allData1, setAllData1] = useState([]);\n\n  const [bg, setInputBg] = useState(\"\");\n  const [black, setInputBlack] = useState(\"\");\n\n  const myRef = React.createRef();\n  //*======================\n\n  const changeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const changeTitle = (event) => {\n    setTitle(event.target.value);\n  };\n  const handleTick = (e) => {\n    if (show3 == true) {\n      setShow3(false);\n    } else {\n      setShow3(true);\n    }\n  };\n  const handleClicking = () => {\n    if (bg.length !== 0) {\n      setAllData1((newData1) => [...newData1, { bg: bg, black: black }]);\n      setInputBg(\"\");\n      setInputBlack(\"\");\n    }\n  };\n\n  const transferValue = (event) => {\n    event.preventDefault();\n    const val = {\n      name,\n      title,\n    };\n    props.func(val);\n    clearState();\n  };\n  const handleAdd = () => {\n    if (name.length !== 0) {\n      setAllData((newData) => [...newData, { name: name, title: title }]);\n      setName(\"\");\n      setTitle(\"\");\n    }\n  };\n  const handleRemoveClick = (index) => {\n    const list = [...allData];\n    list.splice(index, 1);\n    setAllData(list);\n  };\n  const clearState = () => {\n    setName(\"\");\n    setTitle(\"\");\n  };\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    height: \"96%\",\n    left: \"50%\",\n    borderRadius: \"20px\",\n    transform: \"translate(-50%, -50%)\",\n    width: 420,\n    bgcolor: \"background.paper\",\n    border: \"2px solid rgb(131,100,226)\",\n    boxShadow: \"0 0 10px rgb(131,100,226)\",\n    p: 4,\n  };\n  const [list, updateList] = useState(\"\");\n  const handleRemove = (index) => {\n    const data = index.target.getAttribute(\"name\", \"title\");\n    updateList(list.filter((item) => item.name !== data));\n  };\n  const handleShow = () => {\n    document.getElementById(\"tab_opt_1\").classList.add(\"show\");\n    document.getElementById(\"tab_opt_1\").classList.remove(\"hide\");\n    document.getElementById(\"tab_opt_2\").classList.remove(\"show\");\n    document.getElementById(\"btn1\").classList.add(\"active\");\n    document.getElementById(\"btn2\").classList.remove(\"active\");\n    document.getElementById(\"btn3\").classList.remove(\"active\");\n  };\n  const handleShow1 = () => {\n    document.getElementById(\"tab_opt_1\").classList.add(\"hide\");\n    document.getElementById(\"tab_opt_1\").classList.remove(\"show\");\n    document.getElementById(\"tab_opt_2\").classList.add(\"show\");\n    document.getElementById(\"btn1\").classList.remove(\"active\");\n    document.getElementById(\"btn2\").classList.add(\"active\");\n    document.getElementById(\"btn3\").classList.remove(\"active\");\n  };\n  const handleShow2 = () => {\n    document.getElementById(\"tab_opt_1\").classList.add(\"show\");\n    document.getElementById(\"btn1\").classList.remove(\"active\");\n    document.getElementById(\"btn2\").classList.remove(\"active\");\n    document.getElementById(\"btn3\").classList.add(\"active\");\n  };\n  const unlockClick = () => {\n    setIsActive(true);\n  };\n  const unlockHide = () => {\n    setIsActive(false);\n  };\n  const unlockClick1 = () => {\n    setIsActive1(true);\n  };\n  const unlockHide1 = () => {\n    setIsActive1(false);\n  };\n  const removeBtn = (idx) => {\n    const list = [...allData1];\n    list.splice(idx, 1);\n    setAllData1(list);\n  };\n  const unlockClick2 = () => {\n    setIsActive2(true);\n  };\n  const unlockHide2 = () => {\n    setIsActive2(false);\n  };\n  function handleChange(e) {\n    console.log(e.target.files);\n    setFile(URL.createObjectURL(e.target.files[0]));\n  }\n\n  //*=============================\n  const handleCollectionCreate = async () => {\n    try {\n      if (title === \"\" || description === \"\" || image === \"\" || symbol === \"\") {\n        //console.log(\"Fill All details\");\n        console.log(\"Fill Details\");\n        return;\n      }\n\n      let collectionData = {\n        sName: title,\n        sDescription: description,\n        nftFile: image,\n        erc721: JSON.stringify(true),\n        sRoyaltyPercentage: Number(royalty) * 100,\n        quantity: 1,\n        symbol: symbol,\n      };\n      console.log(\"collection Data in create Single\", collectionData);\n\n      let collectionsList = \"\";\n      try {\n        await handleCollectionCreation(\n          true,\n          collectionData,\n          props.account?.account\n        );\n        collectionsList = await getUsersCollections();\n        console.log(collectionsList);\n      } catch (e) {\n        return;\n      }\n      if (collectionsList) {\n        collectionsList = collectionsList?.filter((collection) => {\n          return collection.erc721 === true;\n        });\n      }\n      console.log(\"single collectionsList\", collectionsList);\n      setCollections(collectionsList);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleNftCreation = async () => {\n    console.log(\"props\", props);\n    if (props.account && props.account.account) {\n      try {\n        console.log(\"nft image\", nftImage);\n        // let isValid = validateInputs();\n        // if (!isValid) return;\n\n        // setisShowPopup(true);\n\n        let metaData = [];\n        for (let i = 0; i < propertyKeys.length; i++) {\n          metaData.push({\n            trait_type: propertyKeys[i],\n            value: propertyValues[i],\n          });\n        }\n        setCollaborators(\n          \"0xa0BB53b41A4BF1524DeD5Ee73aF503a87717a73e\",\n          \"0xa3d16efC8cF4F4F1ACEDF6A57cb8ea79bC53d792\"\n        );\n        setCollaboratorPercents(\"1\", \"2\");\n\n        var fd = new FormData();\n        fd.append(\"metaData\", JSON.stringify(metaData));\n        fd.append(\"nCreatorAddress\", props.account.account.toLowerCase());\n        fd.append(\"nTitle\", nftTitle);\n        fd.append(\"nftFile\", nftImage);\n        fd.append(\"nQuantity\", quantity);\n        fd.append(\"nCollaborator\", [...collaborators]);\n        fd.append(\"nCollaboratorPercentage\", [...collaboratorPercents]);\n        fd.append(\"nRoyaltyPercentage\", 10);\n        fd.append(\"nCollection\", nftContractAddress);\n        fd.append(\"nDescription\", nftDesc);\n        fd.append(\"nTokenID\", nextId);\n        fd.append(\"nType\", 1);\n        fd.append(\"lockedContent\", lockedContent);\n\n        // setisUploadPopupClass(\"clockloader\");\n\n        let res = await createNft(fd);\n        console.log(\"res========\", res);\n\n        try {\n          let historyMetaData = {\n            nftId: res.result._id,\n            userId: res.result.nCreater,\n            action: \"Creation\",\n            actionMeta: \"Default\",\n            // message: `${props?.profileData?.profileData?.sUserName} Created NFT ${res.data.nTitle}`,\n          };\n\n          await InsertHistory(historyMetaData);\n        } catch (e) {\n          console.log(\"error in history api\", e);\n          return;\n        }\n\n        console.log(\"nft Address\", nftContractAddress);\n\n        const NFTcontract = await exportInstance(\n          nftContractAddress,\n          simplerERC721ABI.abi\n        );\n        console.log(\"NFT Contract\", NFTcontract);\n\n        let approval = await NFTcontract.isApprovedForAll(\n          props.account.account,\n          contracts.MARKETPLACE\n        );\n        let approvalres;\n        const options = {\n          from: props.account.account,\n          gasPrice: 10000000000,\n          gasLimit: 9000000,\n          value: 0,\n        };\n\n        console.log(\"approval\", approval);\n        if (!approval) {\n          approvalres = await NFTcontract.setApprovalForAll(\n            contracts.MARKETPLACE,\n            true,\n            options\n          );\n          approvalres = await approvalres.wait();\n          if (approvalres.status === 0) {\n            console.log(\"Transaction failed\");\n            return;\n          }\n\n          console.log(\"Approved\");\n        }\n\n        // setisMintPopupClass(\"clockloader\");\n        console.log(\"To be minted\", nextId, GENERAL_TIMESTAMP);\n\n        let res1 = \"\";\n        try {\n          let mintres = await NFTcontract.mint(\n            props.account.account,\n            nextId,\n            options\n          );\n\n          res1 = await mintres.wait();\n\n          console.log(\"res1======\", res1);\n\n          if (res1.status === 0) {\n            console.log(\"Transaction failed\");\n            return;\n          }\n        } catch (minterr) {\n          console.log(\"Mint error\", minterr);\n\n          return;\n        }\n\n        // setCollaborators = [\n        //   \"0xa0BB53b41A4BF1524DeD5Ee73aF503a87717a73e\",\n        //   \"0xa3d16efC8cF4F4F1ACEDF6A57cb8ea79bC53d792\",\n        // ];\n\n        console.log(\"collaborators\", collaborators);\n        // let localCollabPercent = [];\n        // for (let i = 0; i < collaboratorPercents.length; i++) {\n        //   localCollabPercent[i] = Number(collaboratorPercents[i]) * 100;\n        // }\n        // if (collaborators.length > 0) {\n        try {\n          console.log(\"------>in collaborator\", collaboratorPercents);\n          // let collaborator = await NFTcontract.setTokenRoyaltyDistribution(\n          //   collaborators,\n          //   localCollabPercent,\n          //   nextId\n          // );\n          let collaborator = await NFTcontract.setTokenRoyaltyDistribution(\n            [\n              \"0xa0BB53b41A4BF1524DeD5Ee73aF503a87717a73e\",\n              \"0xa3d16efC8cF4F4F1ACEDF6A57cb8ea79bC53d792\",\n            ],\n            [2500, 2500],\n            nextId\n          );\n          collaborator = await collaborator.wait();\n          if (collaborator.status === 0) {\n            console.log(\"Transaction failed\");\n            return;\n          }\n        } catch (Collerr) {\n          console.log(\"Coll error\", Collerr);\n          return;\n        }\n        console.log(\"Collaborator addded\");\n        // }\n\n        let _deadline;\n        let _price;\n        let defaultPrice = ethers.utils.parseEther(\"0.5\").toString();\n        let _auctionEndDate;\n        console.log(\"To be minted\", nextId, GENERAL_TIMESTAMP);\n        console.log(\n          \"values==========>\",\n          props.account.account.toLowerCase(),\n          nftContractAddress,\n          nextId,\n          quantity,\n          saleType,\n          selectedTokenAddress\n            ? selectedTokenAddress\n            : \"0x0000000000000000000000000000000000000000\",\n          // ethers.utils.parseEther(1.0),\n          GENERAL_TIMESTAMP,\n          [],\n          [],\n          salt\n        );\n        let chosenType = 1;\n        if (chosenType === 0) {\n          _deadline = GENERAL_TIMESTAMP;\n          _auctionEndDate = GENERAL_DATE;\n          _price = defaultPrice;\n          console.log(\"price==>\", _price);\n        } else if (chosenType === 1) {\n          let _endTime = new Date(endTime).valueOf() / 1000;\n          _auctionEndDate = endTime;\n          _deadline = _endTime;\n          _price = defaultPrice;\n        } else if (chosenType === 2) {\n          _deadline = GENERAL_TIMESTAMP;\n          _auctionEndDate = GENERAL_DATE;\n          _price = defaultPrice;\n        }\n\n        let isPutOnMarketplace = 1;\n        _deadline = GENERAL_TIMESTAMP;\n        if (isPutOnMarketplace === 1) {\n          let sellerOrder = [\n            props.account.account.toLowerCase(),\n            nftContractAddress,\n            nextId,\n            quantity,\n            saleType,\n            selectedTokenAddress\n              ? selectedTokenAddress\n              : \"0x0000000000000000000000000000000000000000\",\n            _price,\n            _deadline,\n            [],\n            [],\n            salt,\n          ];\n\n          console.log(\"sellerOrder is---->\", sellerOrder);\n          let signature = await getSignature(\n            props.account.account,\n            ...sellerOrder\n          );\n          console.log(\"nftContractAddress is---->\", nftContractAddress);\n          console.log(\"signature =========>\", signature);\n\n          let reqParams = {\n            nftId: res.result._id,\n            seller: props.account.account.toLowerCase(),\n            tokenAddress: selectedTokenAddress\n              ? selectedTokenAddress\n              : \"0x0000000000000000000000000000000000000000\",\n            collection: nftContractAddress,\n            price: _price,\n            quantity: quantity,\n            saleType: saleType,\n            validUpto: _deadline,\n            signature: signature,\n            tokenId: nextId,\n            auctionEndDate: _auctionEndDate,\n            salt: salt,\n          };\n\n          let data = \"\";\n          try {\n            data = await createOrder(reqParams);\n            console.log(\"propss\", props);\n            console.log(\"data========>\", data);\n            try {\n              let historyMetaData = {\n                nftId: res.result._id,\n                userId: res.result.nCreater,\n                action: \"Marketplace\",\n                actionMeta: \"Default\",\n                // message: `${props?.profileData?.profileData?.sUserName} Put NFT ${res.data.nTitle} on Marketplace`,\n              };\n\n              await InsertHistory(historyMetaData);\n              console.log(\"data inserted sucessfully\");\n            } catch (e) {\n              console.log(\"error in history api\", e);\n              return;\n            }\n          } catch (DataErr) {\n            return;\n          }\n          console.log(\"dataaa\", data);\n          try {\n            await SetNFTOrder({\n              orderId: data.results._id,\n              nftId: data.results.oNftId,\n            });\n            console.log(\"NFT Order set Successfully\");\n          } catch (NFTErr) {\n            console.log(\"Coll error\", NFTErr);\n            // setisPutOnSalePopupClass(\"errorIcon\");\n            // stopCreateNFTPopup();\n            return;\n          }\n          // setisPutOnSalePopupClass(\"checkiconCompleted\");\n          console.log(\"seller sign\", reqParams);\n        }\n        // window.location.href = \"/profile\";\n      } catch (err) {\n        console.log(\"error\", err);\n        // stopCreateNFTPopup();\n        return;\n      }\n    }\n  };\n  const handleShow4 = (address, i) => {\n    setNftContractAddress(address);\n    $(\".active\").removeClass(\"clicked\");\n    $(\"#my_cus_btn\" + i).addClass(\"clicked\");\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (\n        (props.token && props.token.token) ||\n        localStorage.getItem(\"Authorization\")\n      ) {\n        let collectionsList = await getUsersCollections();\n        console.log(\"single \", collectionsList);\n        if (collectionsList)\n          collectionsList = collectionsList?.results.filter((results) => {\n            return results.erc721 === true;\n          });\n        console.log(\"single collectionsList\", collectionsList);\n        setCollections(collectionsList);\n        let profile = await getProfile();\n        // console.log(profile.sProfilePicUrl);\n        // if (profile) {\n        //   setProfilePic(\n        //     \"https://decryptnft.mypinata.cloud/ipfs/\" + profile.sProfilePicUrl\n        //   );\n        // } else {\n        //   setProfilePic(\"../assets/react.svg\");\n        // }\n      }\n    }\n    if (\n      (props.token && props.token.token) ||\n      localStorage.getItem(\"Authorization\")\n    ) {\n      fetchData();\n    }\n  }, [props.token]);\n\n  //*=============================\n\n  return (\n    <div>\n      <GlobalStyles />\n\n      <section\n        className=\"jumbotron breadcumb no-bg\"\n        style={{\n          backgroundImage: `url(${\"./img/background/subheader.jpg\"})`,\n        }}\n      >\n        <div className=\"mainbreadcumb\">\n          <div className=\"container\">\n            <div className=\"row m-10-hor\">\n              <div className=\"col-12\">\n                <h1 className=\"text-center\">Create 2</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-7 offset-lg-1 mb-5\">\n            <div id=\"form-create-item\" className=\"form-border\" action=\"#\">\n              <div\n                style={{\n                  float: \"left\",\n                  flex: \"1\",\n                  overflowY: \"scroll\",\n                  maxHeight: \"500px\",\n                }}\n              >\n                <button\n                  style={{\n                    color: \"rgb(131,100,226)\",\n                    height: \"150px\",\n                    width: \"130px\",\n                    border: \"solid 2px rgb(131,100,226)\",\n                    borderRadius: \"12px\",\n                    float: \"left\",\n                    marginTop: \"40px\",\n                    marginLeft: \"20px\",\n                  }}\n                  onClick={handleOpen}\n                >\n                  Create New\n                </button>\n                <div>\n                  {collections && collections.length >= 1\n                    ? collections.map((collection, index) => {\n                        return (\n                          <li\n                            key={index}\n                            id={`my_cus_btn${index}`}\n                            ref={myRef}\n                            style={{\n                              width: \"fit-content\",\n                              color: \"green\",\n                              height: \"150px\",\n                              width: \"130px\",\n                              border: \"solid 1px green\",\n                              borderRadius: \"12px\",\n                              marginLeft: \"20px\",\n                              marginTop: \"40px\",\n                              float: \"left\",\n                              cursor: \"pointer\",\n                            }}\n                            onClick={(e) => {\n                              handleShow4(collection.sContractAddress, index);\n                              setNextId(collection.nextId);\n                            }}\n                          >\n                            <span\n                              className=\"span-border radio-img\"\n                              style={{ float: \"left\" }}\n                            >\n                              <img\n                                className=\"choose-collection-img image\"\n                                alt=\"\"\n                                height=\"10px\"\n                                width=\"10px\"\n                                src={`https://ipfs.io/ipfs/${collection.sHash}`}\n                              ></img>\n                              {collection.sName}\n                            </span>\n                          </li>\n                        );\n                      })\n                    : \"\"}\n                </div>\n              </div>\n              <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n              >\n                <Box sx={style}>\n                  <input\n                    type=\"file\"\n                    onChange={(e) => {\n                      setImage(e.target.files[0]);\n                    }}\n                  />\n                  <img src={file} style={{ width: \"210px\", height: \"110px\" }} />\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    Title{\"\"}\n                  </Typography>\n\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      value={title}\n                      onChange={(e) => {\n                        setTitle(e.target.value);\n                      }}\n                    ></input>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    Symbol\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Symbol\"\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      value={symbol}\n                      onChange={(e) => {\n                        setSymbol(e.target.value);\n                      }}\n                    ></input>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    {\" \"}\n                    Description{\" \"}\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <textarea\n                      data-autoresize\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      value={description}\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      onChange={(e) => {\n                        setDescription(e.target.value);\n                      }}\n                    ></textarea>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    {\" \"}\n                    Description{\" \"}\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <textarea\n                      data-autoresize\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      value={description}\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      onChange={(e) => {\n                        setDescription(e.target.value);\n                      }}\n                    ></textarea>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    Royalities\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <input\n                      type=\"number\"\n                      value={royalty}\n                      placeholder=\"Description\"\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      onChange={(e) => {\n                        if (Number(e.target.value) > 100) {\n                          console.log(\"Percentage should be less than 100%\");\n                          return;\n                        }\n                        setRoyalty(Number(e.target.value));\n                      }}\n                    ></input>\n                    <br />\n                  </Typography>\n\n                  <div className=\"spacer-20\"></div>\n                  <button\n                    type=\"submit\"\n                    style={{ backgroundColor: \"rgb(131,100,226)\" }}\n                    onClick={() => {\n                      handleCollectionCreate();\n                    }}\n                  >\n                    Create Collection\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    style={{ backgroundColor: \"rgb(131,100,226)\" }}\n                    onClick={handleClose}\n                  >\n                    Cancel\n                  </button>\n                </Box>\n              </Modal>\n\n              <div className=\"field-set\">\n                <div className=\"spacer-single\"></div>\n\n                <h5>Upload file</h5>\n\n                <div className=\"d-create-file\">\n                  <p id=\"file_name\">PNG, JPG, GIF, WEBP or MP4. Max 200mb.</p>\n                  {files.map((x) => (\n                    <p key=\"{index}\">\n                      PNG, JPG, GIF, WEBP or MP4. Max 200mb.{x.name}\n                    </p>\n                  ))}\n                  <div className=\"browse\">\n                    <input\n                      type=\"button\"\n                      id=\"get_file\"\n                      className=\"btn-main\"\n                      value=\"Browse\"\n                    />\n                    <input\n                      id=\"upload_file\"\n                      type=\"file\"\n                      multiple\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"switch-with-title\">\n                  <h5>\n                    <i className=\"fa fa- fa-unlock-alt id-color-2 mr10\"></i>\n                    Unlock Once Purchased\n                  </h5>\n                  <div className=\"de-switch\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"switch-unlock\"\n                      className=\"checkbox\"\n                    />\n                    {isActive ? (\n                      <label\n                        htmlFor=\"switch-unlock\"\n                        onClick={unlockHide}\n                      ></label>\n                    ) : (\n                      <label\n                        htmlFor=\"switch-unlock\"\n                        onClick={unlockClick}\n                      ></label>\n                    )}\n                  </div>\n                  <div className=\"clearfix\"></div>\n                  <p className=\"p-info pb-3\">\n                    Unlock content after successful transaction.\n                  </p>\n\n                  {isActive ? (\n                    <div id=\"unlockCtn\" className=\"hide-content\">\n                      <input\n                        type=\"text\"\n                        name=\"item_unlock\"\n                        id=\"item_unlock\"\n                        className=\"form-control\"\n                        placeholder=\"Access key, code to redeem or link to a file...\"\n                      />\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"switch-with-title\">\n                  <h5>\n                    <i className=\"fa fa- fa-unlock-alt id-color-2 mr10\"></i>\n                    Put On Marketplace\n                  </h5>\n                  <div className=\"de-switch\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"switch-unlock1\"\n                      className=\"checkbox\"\n                    />\n                    {isActive1 ? (\n                      <label\n                        htmlFor=\"switch-unlock1\"\n                        onClick={unlockHide1}\n                      ></label>\n                    ) : (\n                      <label\n                        htmlFor=\"switch-unlock1\"\n                        onClick={unlockClick1}\n                      ></label>\n                    )}\n                  </div>\n                  <div className=\"clearfix\"></div>\n                  {isActive1 ? (\n                    <div id=\"unlockCtn\" className=\"hide-content\">\n                      <br />\n                      <h5>Select method</h5>\n                      <br />\n                      <br />\n                      <div className=\"de_tab tab_methods\">\n                        <ul className=\"de_nav\">\n                          <li id=\"btn1\" className=\"active\" onClick={handleShow}>\n                            <span>\n                              <i className=\"fa fa-tag\"></i>Fixed price\n                            </span>\n                          </li>\n                          <li id=\"btn2\" onClick={handleShow1}>\n                            <span>\n                              <i className=\"fa fa-hourglass-1\"></i>Timed auction\n                            </span>\n                          </li>\n                          <li id=\"btn3\" onClick={handleShow2}>\n                            <span>\n                              <i className=\"fa fa-users\"></i>Open for bids\n                            </span>\n                          </li>\n                        </ul>\n\n                        <div className=\"de_tab_content pt-3\">\n                          <div id=\"tab_opt_1\">\n                            <h5>Price</h5>\n                            <input\n                              type=\"text\"\n                              name=\"item_price\"\n                              id=\"item_price\"\n                              className=\"form-control\"\n                              placeholder=\"enter price for one item (ETH)\"\n                            />\n                          </div>\n\n                          <div id=\"tab_opt_2\" className=\"hide\">\n                            <h5>Minimum bid</h5>\n                            <input\n                              type=\"text\"\n                              name=\"item_price_bid\"\n                              id=\"item_price_bid\"\n                              className=\"form-control\"\n                              placeholder=\"enter minimum bid\"\n                            />\n\n                            <div className=\"spacer-20\"></div>\n\n                            <div className=\"row\">\n                              <div className=\"col-md-6\">\n                                <h5>Payment Token</h5>\n                                <select className=\"form-control\">\n                                  <option>USDT</option>\n                                </select>\n                              </div>\n                              <div className=\"col-md-6\">\n                                <h5>Expiration date</h5>\n                                <input\n                                  type=\"date\"\n                                  name=\"bid_expiration_date\"\n                                  id=\"bid_expiration_date\"\n                                  className=\"form-control\"\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div id=\"tab_opt_3\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"switch-with-title\">\n                  <h5>\n                    <i className=\"fa fa- fa-unlock-alt id-color-2 mr10\"></i>\n                    Lazy Minting\n                  </h5>\n                  <div className=\"de-switch\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"switch-unlock2\"\n                      className=\"checkbox\"\n                    />\n                    {isActive2 ? (\n                      <label\n                        htmlFor=\"switch-unlock2\"\n                        onClick={unlockHide2}\n                      ></label>\n                    ) : (\n                      <label\n                        htmlFor=\"switch-unlock2\"\n                        onClick={unlockClick2}\n                      ></label>\n                    )}\n                  </div>\n\n                  <div className=\"spacer-20\"></div>\n\n                  <h5>Title</h5>\n                  <input\n                    type=\"text\"\n                    name=\"item_title\"\n                    id=\"item_title\"\n                    className=\"form-control\"\n                    placeholder=\"e.g. 'Crypto Funk\"\n                  />\n\n                  <div className=\"spacer-10\"></div>\n\n                  <h5>Description</h5>\n                  <textarea\n                    data-autoresize\n                    name=\"item_desc\"\n                    id=\"item_desc\"\n                    className=\"form-control\"\n                    placeholder=\"e.g. 'This is very limited item'\"\n                  ></textarea>\n\n                  <div className=\"spacer-10\"></div>\n\n                  <h5>Quantity</h5>\n                  <input\n                    data-autoresize\n                    type=\"number\"\n                    name=\"item_quant\"\n                    id=\"item_quant\"\n                    className=\"form-control\"\n                    placeholder=\"0\"\n                  />\n\n                  <div className=\"clearfix\"></div>\n                  {!isActive2 ? (\n                    <div id=\"unlockCtn\" className=\"hide-content\">\n                      <h5>Collaborator(Optional)</h5>\n                      <input\n                        type=\"text\"\n                        value={name}\n                        name=\"item_title\"\n                        id=\"item_title\"\n                        className=\"form-control\"\n                        placeholder=\"Please Enter Colaborator's Wallet Address\"\n                        onChange={(e) => {\n                          setName(e?.target?.value);\n                        }}\n                      />\n\n                      <input\n                        type=\"text\"\n                        name=\"item_title\"\n                        id=\"item_title\"\n                        value={title}\n                        className=\"form-control\"\n                        placeholder=\"Percent\"\n                        onChange={(e) => {\n                          setTitle(e?.target?.value);\n                        }}\n                      />\n\n                      <input\n                        type=\"button\"\n                        id=\"submit\"\n                        className=\"btn-main\"\n                        value=\"Add Collaborator\"\n                        onClick={handleAdd}\n                      />\n                    </div>\n                  ) : null}\n                </div>\n                <div>\n                  {allData.reverse().map((name, i) => {\n                    return (\n                      <>\n                        <div>\n                          <div className=\"spacer-20\"></div>\n                          <h6>{name?.name}</h6>\n                          <h6>{name?.title}</h6>\n                          <div className=\"spacer-20\"></div>\n                          <input\n                            type=\"button\"\n                            id=\"submit\"\n                            className=\"btn-main\"\n                            value=\"Remove\"\n                            onClick={() => handleRemoveClick(i)}\n                          />{\" \"}\n                        </div>\n                      </>\n                    );\n                  })}\n                </div>\n\n                <div className=\"spacer-20\"></div>\n                <div className=\"spacer-10\"></div>\n\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n\n                <button\n                  style={{\n                    width: \"640px\",\n                    borderRadius: \"20px\",\n                  }}\n                  className=\"btn-main\"\n                  onClick={handleTick}\n                >\n                  {show3 == false\n                    ? \"Show Advanced Settings\"\n                    : \"Hide Advanced Settings\"}\n                </button>\n                <br />\n                <br />\n                {show3 == true ? (\n                  <>\n                    <input\n                      type=\"text\"\n                      value={bg}\n                      placeholder=\"eg.background\"\n                      style={{ border: \"none\" }}\n                      onChange={(e) => {\n                        setInputBg(e?.target?.value);\n                      }}\n                    ></input>\n                    <input\n                      type=\"text\"\n                      placeholder=\"eg.black\"\n                      value={black}\n                      onChange={(e) => {\n                        setInputBlack(e?.target?.value);\n                      }}\n                      style={{ border: \"none\", marginLeft: \"200px\" }}\n                    ></input>\n                    <div className=\"spacer-10\"></div>\n                    <div className=\"spacer-10\"></div>\n\n                    <button className=\"btn-main\" onClick={handleClicking}>\n                      Add Property\n                    </button>\n                  </>\n                ) : null}\n                <div>\n                  {allData1.reverse().map((bg, i) => {\n                    return (\n                      <>\n                        <div>\n                          <div className=\"spacer-20\"></div>\n                          <h6>{bg?.bg}</h6>\n                          <h6>{bg?.black}</h6>\n                          <div className=\"spacer-20\"></div>\n                          <input\n                            type=\"button\"\n                            id=\"submit\"\n                            className=\"btn-main\"\n                            value=\"Remove\"\n                            onClick={() => removeBtn(i)}\n                          />{\" \"}\n                        </div>\n                      </>\n                    );\n                  })}\n                </div>\n\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <input\n                  type=\"button\"\n                  id=\"submit\"\n                  className=\"btn-main\"\n                  value=\"Create NFT\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-3 col-sm-6 col-xs-12\">\n            <h5>Preview item</h5>\n            <div className=\"nft__item m-0\">\n              <div className=\"de_countdown\">\n                <Clock deadline=\"December, 30, 2021\" />\n              </div>\n              <div className=\"author_list_pp\">\n                <span>\n                  <img\n                    className=\"lazy\"\n                    src=\"./img/author/author-1.jpg\"\n                    alt=\"\"\n                  />\n                  <i className=\"fa fa-check\"></i>\n                </span>\n              </div>\n              <div className=\"nft__item_wrap\">\n                <span>\n                  <img\n                    src=\"./img/collections/coll-item-3.jpg\"\n                    id=\"get_file_2\"\n                    className=\"lazy nft__item_preview\"\n                    alt=\"\"\n                  />\n                </span>\n              </div>\n              <div className=\"nft__item_info\">\n                <span>\n                  <h4>Pinky Ocean</h4>\n                </span>\n                <div className=\"nft__item_price\">\n                  0.08 ETH<span>1/20</span>\n                </div>\n                <div className=\"nft__item_action\">\n                  <span>Place a bid</span>\n                </div>\n                <div className=\"nft__item_like\">\n                  <i className=\"fa fa-heart\"></i>\n                  <span>50</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n    token: state.token,\n    profileData: state.profileData,\n  };\n};\n\nexport default connect(mapStateToProps)(Createpage);\n","/home/dell/Documents/Market/src/components/pages/createOptions.js",[],"/home/dell/Documents/Market/src/components/pages/createSingle.js",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React, { useState, useEffect } from \"react\";\nimport Clock from \"../components/Clock\";\nimport Footer from \"../components/footer\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\n\n//*============================\nimport {\n  createNft,\n  createOrder,\n  getProfile,\n  getUsersCollections,\n  InsertHistory,\n  SetNFTOrder,\n  exportInstance,\n} from \"./../../apiServices\";\nimport { handleCollectionCreation } from \"../../helpers/sendFunctions\";\nimport { getSignature } from \"../../helpers/getterFunctions\";\nimport { options } from \"../../helpers/constants\";\nimport $ from \"jquery\";\nimport {\n  CURRENCY,\n  GENERAL_DATE,\n  GENERAL_TIMESTAMP,\n} from \"../../helpers/constants\";\nimport simplerERC721ABI from \"../../Config/abis/simpleERC721.json\";\nimport contracts from \"../../Config/contracts\";\nimport { ethers } from \"ethers\";\nimport { connect } from \"react-redux\";\n//*================\n\nconst GlobalStyles = createGlobalStyle`\n  header#myHeader.navbar.sticky.white {\n    background: #403f83;\n    border-bottom: solid 1px #403f83;\n  }\n  header#myHeader.navbar .search #quick_search{\n    color: #fff;\n    background: rgba(255, 255, 255, .1);\n  }\n  header#myHeader.navbar.white .btn, .navbar.white a, .navbar.sticky.white a{\n    color: #fff;\n  }\n  header#myHeader .dropdown-toggle::after{\n    color: rgba(255, 255, 255, .5);\n  }\n  header#myHeader .logo .d-block{\n    display: none !important;\n  }\n  header#myHeader .logo .d-none{\n    display: block !important;\n  }\n  .mainside{\n    .connect-wal{\n      display: none;\n    }\n    .logout{\n      display: flex;\n      align-items: center;\n    }\n  }\n  @media only screen and (max-width: 1199px) {\n    .navbar{\n      background: #403f83;\n    }\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\n      background: #fff;\n    }\n    .item-dropdown .dropdown a{\n      color: #fff !important;\n    }\n  }\n`;\n\nconst Createpage = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [files, setFiles] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [isActive1, setIsActive1] = useState(false);\n  const [isActive2, setIsActive2] = useState(false);\n  const [file, setFile] = useState();\n  const [count, setCount] = useState(0);\n  const [showResults, setShowResults] = React.useState(false);\n  const onClick = () => setShowResults(true);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const onChange = (e) => {\n    let files = e.target.files;\n    var filesArr = Array.prototype.slice.call(files);\n    document.getElementById(\"file_name\").style.display = \"none\";\n    setFiles({ files: [...files, ...filesArr] });\n  };\n  const [name, setName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [allData, setAllData] = useState([]);\n\n  //*======================\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState();\n  const [symbol, setSymbol] = useState(\"\");\n  const [royalty, setRoyalty] = useState(0);\n  const [collections, setCollections] = useState([]);\n  const [nftContractAddress, setNftContractAddress] = useState(\"\");\n  const [nextId, setNextId] = useState(\"\");\n  const [nftImage, setNftImage] = useState(\"\");\n  const [propertyKeys, setPropertyKeys] = useState([]);\n  const [currPropertyKey, setCurrPropertyKey] = useState();\n  const [propertyValues, setPropertyValues] = useState([]);\n  const [currPropertyValue, setCurrPropertyValue] = useState();\n  const [collaborators, setCollaborators] = useState([]);\n  const [collaboratorPercents, setCollaboratorPercents] = useState([]);\n  const [nftTitle, setNftTitle] = useState(\"\");\n  const [saleType, setSaleType] = useState(0);\n  const [quantity, setQuantity] = useState(1);\n  const [salt, setSalt] = useState();\n  const [selectedTokenAddress, setSelectedTokenAddress] = useState();\n  const [endTime, setEndTime] = useState();\n  const [lockedContent, setLockedContent] = useState(\"\");\n  const [nftDesc, setNftDesc] = useState(\"\");\n  const [show3, setShow3] = useState(false);\n  const [allData1, setAllData1] = useState([]);\n\n  const [bg, setInputBg] = useState(\"\");\n  const [black, setInputBlack] = useState(\"\");\n\n  const myRef = React.createRef();\n  //*======================\n\n  const changeName = (event) => {\n    setName(event.target.value);\n  };\n\n  const changeTitle = (event) => {\n    setTitle(event.target.value);\n  };\n  const handleTick = (e) => {\n    if (show3 == true) {\n      setShow3(false);\n    } else {\n      setShow3(true);\n    }\n  };\n  const handleClicking = () => {\n    if (bg.length !== 0) {\n      setAllData1((newData1) => [...newData1, { bg: bg, black: black }]);\n      setInputBg(\"\");\n      setInputBlack(\"\");\n    }\n  };\n\n  const transferValue = (event) => {\n    event.preventDefault();\n    const val = {\n      name,\n      title,\n    };\n    props.func(val);\n    clearState();\n  };\n  const handleAdd = () => {\n    if (name.length !== 0) {\n      setAllData((newData) => [...newData, { name: name, title: title }]);\n      setName(\"\");\n      setTitle(\"\");\n    }\n  };\n  const handleRemoveClick = (index) => {\n    const list = [...allData];\n    list.splice(index, 1);\n    setAllData(list);\n  };\n  const clearState = () => {\n    setName(\"\");\n    setTitle(\"\");\n  };\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    height: \"96%\",\n    left: \"50%\",\n    borderRadius: \"20px\",\n    transform: \"translate(-50%, -50%)\",\n    width: 420,\n    bgcolor: \"background.paper\",\n    border: \"2px solid rgb(131,100,226)\",\n    boxShadow: \"0 0 10px rgb(131,100,226)\",\n    p: 4,\n  };\n  const [list, updateList] = useState(\"\");\n  const handleRemove = (index) => {\n    const data = index.target.getAttribute(\"name\", \"title\");\n    updateList(list.filter((item) => item.name !== data));\n  };\n  const handleShow = () => {\n    document.getElementById(\"tab_opt_1\").classList.add(\"show\");\n    document.getElementById(\"tab_opt_1\").classList.remove(\"hide\");\n    document.getElementById(\"tab_opt_2\").classList.remove(\"show\");\n    document.getElementById(\"btn1\").classList.add(\"active\");\n    document.getElementById(\"btn2\").classList.remove(\"active\");\n    document.getElementById(\"btn3\").classList.remove(\"active\");\n  };\n  const handleShow1 = () => {\n    document.getElementById(\"tab_opt_1\").classList.add(\"hide\");\n    document.getElementById(\"tab_opt_1\").classList.remove(\"show\");\n    document.getElementById(\"tab_opt_2\").classList.add(\"show\");\n    document.getElementById(\"btn1\").classList.remove(\"active\");\n    document.getElementById(\"btn2\").classList.add(\"active\");\n    document.getElementById(\"btn3\").classList.remove(\"active\");\n  };\n  const handleShow2 = () => {\n    document.getElementById(\"tab_opt_1\").classList.add(\"show\");\n    document.getElementById(\"btn1\").classList.remove(\"active\");\n    document.getElementById(\"btn2\").classList.remove(\"active\");\n    document.getElementById(\"btn3\").classList.add(\"active\");\n  };\n  const unlockClick = () => {\n    setIsActive(true);\n  };\n  const unlockHide = () => {\n    setIsActive(false);\n  };\n  const unlockClick1 = () => {\n    setIsActive1(true);\n  };\n  const unlockHide1 = () => {\n    setIsActive1(false);\n  };\n  const removeBtn = (idx) => {\n    const list = [...allData1];\n    list.splice(idx, 1);\n    setAllData1(list);\n  };\n  const unlockClick2 = () => {\n    setIsActive2(true);\n  };\n  const unlockHide2 = () => {\n    setIsActive2(false);\n  };\n  function handleChange(e) {\n    console.log(e.target.files);\n    setFile(URL.createObjectURL(e.target.files[0]));\n  }\n\n  //*=============================\n  const handleCollectionCreate = async () => {\n    try {\n      if (title === \"\" || description === \"\" || image === \"\" || symbol === \"\") {\n        //console.log(\"Fill All details\");\n        console.log(\"Fill Details\");\n        return;\n      }\n\n      let collectionData = {\n        sName: title,\n        sDescription: description,\n        nftFile: image,\n        erc721: JSON.stringify(true),\n        sRoyaltyPercentage: Number(royalty) * 100,\n        quantity: 1,\n        symbol: symbol,\n      };\n      console.log(\"collection Data in create Single\", collectionData);\n\n      let collectionsList = \"\";\n      try {\n        await handleCollectionCreation(\n          true,\n          collectionData,\n          props.account?.account\n        );\n        collectionsList = await getUsersCollections();\n        console.log(collectionsList);\n      } catch (e) {\n        return;\n      }\n      if (collectionsList) {\n        collectionsList = collectionsList?.filter((collection) => {\n          return collection.erc721 === true;\n        });\n      }\n      console.log(\"single collectionsList\", collectionsList);\n      setCollections(collectionsList);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleNftCreation = async () => {\n    console.log(\"props\", props);\n    if (props.account && props.account.account) {\n      try {\n        console.log(\"nft image\", nftImage);\n        // let isValid = validateInputs();\n        // if (!isValid) return;\n\n        // setisShowPopup(true);\n\n        let metaData = [];\n        for (let i = 0; i < propertyKeys.length; i++) {\n          metaData.push({\n            trait_type: propertyKeys[i],\n            value: propertyValues[i],\n          });\n        }\n        setCollaborators(\n          \"0xa0BB53b41A4BF1524DeD5Ee73aF503a87717a73e\",\n          \"0xa3d16efC8cF4F4F1ACEDF6A57cb8ea79bC53d792\"\n        );\n        setCollaboratorPercents(\"1\", \"2\");\n\n        var fd = new FormData();\n        fd.append(\"metaData\", JSON.stringify(metaData));\n        fd.append(\"nCreatorAddress\", props.account.account.toLowerCase());\n        fd.append(\"nTitle\", nftTitle);\n        fd.append(\"nftFile\", nftImage);\n        fd.append(\"nQuantity\", quantity);\n        fd.append(\"nCollaborator\", [...collaborators]);\n        fd.append(\"nCollaboratorPercentage\", [...collaboratorPercents]);\n        fd.append(\"nRoyaltyPercentage\", 10);\n        fd.append(\"nCollection\", nftContractAddress);\n        fd.append(\"nDescription\", nftDesc);\n        fd.append(\"nTokenID\", nextId);\n        fd.append(\"nType\", 1);\n        fd.append(\"lockedContent\", lockedContent);\n\n        // setisUploadPopupClass(\"clockloader\");\n\n        let res = await createNft(fd);\n        console.log(\"res========\", res);\n\n        try {\n          let historyMetaData = {\n            nftId: res.result._id,\n            userId: res.result.nCreater,\n            action: \"Creation\",\n            actionMeta: \"Default\",\n            // message: `${props?.profileData?.profileData?.sUserName} Created NFT ${res.data.nTitle}`,\n          };\n\n          await InsertHistory(historyMetaData);\n        } catch (e) {\n          console.log(\"error in history api\", e);\n          return;\n        }\n\n        console.log(\"nft Address\", nftContractAddress);\n\n        const NFTcontract = await exportInstance(\n          nftContractAddress,\n          simplerERC721ABI.abi\n        );\n        console.log(\"NFT Contract\", NFTcontract);\n\n        let approval = await NFTcontract.isApprovedForAll(\n          props.account.account,\n          contracts.MARKETPLACE\n        );\n        let approvalres;\n        const options = {\n          from: props.account.account,\n          gasPrice: 10000000000,\n          gasLimit: 9000000,\n          value: 0,\n        };\n\n        console.log(\"approval\", approval);\n        if (!approval) {\n          approvalres = await NFTcontract.setApprovalForAll(\n            contracts.MARKETPLACE,\n            true,\n            options\n          );\n          approvalres = await approvalres.wait();\n          if (approvalres.status === 0) {\n            console.log(\"Transaction failed\");\n            return;\n          }\n\n          console.log(\"Approved\");\n        }\n\n        // setisMintPopupClass(\"clockloader\");\n        console.log(\"To be minted\", nextId, GENERAL_TIMESTAMP);\n\n        let res1 = \"\";\n        try {\n          let mintres = await NFTcontract.mint(\n            props.account.account,\n            nextId,\n            options\n          );\n\n          res1 = await mintres.wait();\n\n          console.log(\"res1======\", res1);\n\n          if (res1.status === 0) {\n            console.log(\"Transaction failed\");\n            return;\n          }\n        } catch (minterr) {\n          console.log(\"Mint error\", minterr);\n\n          return;\n        }\n\n        // setCollaborators = [\n        //   \"0xa0BB53b41A4BF1524DeD5Ee73aF503a87717a73e\",\n        //   \"0xa3d16efC8cF4F4F1ACEDF6A57cb8ea79bC53d792\",\n        // ];\n\n        console.log(\"collaborators\", collaborators);\n        // let localCollabPercent = [];\n        // for (let i = 0; i < collaboratorPercents.length; i++) {\n        //   localCollabPercent[i] = Number(collaboratorPercents[i]) * 100;\n        // }\n        // if (collaborators.length > 0) {\n        try {\n          console.log(\"------>in collaborator\", collaboratorPercents);\n          // let collaborator = await NFTcontract.setTokenRoyaltyDistribution(\n          //   collaborators,\n          //   localCollabPercent,\n          //   nextId\n          // );\n          let collaborator = await NFTcontract.setTokenRoyaltyDistribution(\n            [\n              \"0xa0BB53b41A4BF1524DeD5Ee73aF503a87717a73e\",\n              \"0xa3d16efC8cF4F4F1ACEDF6A57cb8ea79bC53d792\",\n            ],\n            [2500, 2500],\n            nextId\n          );\n          collaborator = await collaborator.wait();\n          if (collaborator.status === 0) {\n            console.log(\"Transaction failed\");\n            return;\n          }\n        } catch (Collerr) {\n          console.log(\"Coll error\", Collerr);\n          return;\n        }\n        console.log(\"Collaborator addded\");\n        // }\n\n        let _deadline;\n        let _price;\n        let defaultPrice = ethers.utils.parseEther(\"0.5\").toString();\n        let _auctionEndDate;\n        console.log(\"To be minted\", nextId, GENERAL_TIMESTAMP);\n        console.log(\n          \"values==========>\",\n          props.account.account.toLowerCase(),\n          nftContractAddress,\n          nextId,\n          quantity,\n          saleType,\n          selectedTokenAddress\n            ? selectedTokenAddress\n            : \"0x0000000000000000000000000000000000000000\",\n          // ethers.utils.parseEther(1.0),\n          GENERAL_TIMESTAMP,\n          [],\n          [],\n          salt\n        );\n        let chosenType = 1;\n        if (chosenType === 0) {\n          _deadline = GENERAL_TIMESTAMP;\n          _auctionEndDate = GENERAL_DATE;\n          _price = defaultPrice;\n          console.log(\"price==>\", _price);\n        } else if (chosenType === 1) {\n          let _endTime = new Date(endTime).valueOf() / 1000;\n          _auctionEndDate = endTime;\n          _deadline = _endTime;\n          _price = defaultPrice;\n        } else if (chosenType === 2) {\n          _deadline = GENERAL_TIMESTAMP;\n          _auctionEndDate = GENERAL_DATE;\n          _price = defaultPrice;\n        }\n\n        let isPutOnMarketplace = 1;\n        _deadline = GENERAL_TIMESTAMP;\n        if (isPutOnMarketplace === 1) {\n          let sellerOrder = [\n            props.account.account.toLowerCase(),\n            nftContractAddress,\n            nextId,\n            quantity,\n            saleType,\n            selectedTokenAddress\n              ? selectedTokenAddress\n              : \"0x0000000000000000000000000000000000000000\",\n            _price,\n            _deadline,\n            [],\n            [],\n            salt,\n          ];\n\n          console.log(\"sellerOrder is---->\", sellerOrder);\n          let signature = await getSignature(\n            props.account.account,\n            ...sellerOrder\n          );\n          console.log(\"nftContractAddress is---->\", nftContractAddress);\n          console.log(\"signature =========>\", signature);\n\n          let reqParams = {\n            nftId: res.result._id,\n            seller: props.account.account.toLowerCase(),\n            tokenAddress: selectedTokenAddress\n              ? selectedTokenAddress\n              : \"0x0000000000000000000000000000000000000000\",\n            collection: nftContractAddress,\n            price: _price,\n            quantity: quantity,\n            saleType: saleType,\n            validUpto: _deadline,\n            signature: signature,\n            tokenId: nextId,\n            auctionEndDate: _auctionEndDate,\n            salt: salt,\n          };\n\n          let data = \"\";\n          try {\n            data = await createOrder(reqParams);\n            console.log(\"propss\", props);\n            console.log(\"data========>\", data);\n            try {\n              let historyMetaData = {\n                nftId: res.result._id,\n                userId: res.result.nCreater,\n                action: \"Marketplace\",\n                actionMeta: \"Default\",\n                // message: `${props?.profileData?.profileData?.sUserName} Put NFT ${res.data.nTitle} on Marketplace`,\n              };\n\n              await InsertHistory(historyMetaData);\n              console.log(\"data inserted sucessfully\");\n            } catch (e) {\n              console.log(\"error in history api\", e);\n              return;\n            }\n          } catch (DataErr) {\n            return;\n          }\n          console.log(\"dataaa\", data);\n          try {\n            await SetNFTOrder({\n              orderId: data.results._id,\n              nftId: data.results.oNftId,\n            });\n            console.log(\"NFT Order set Successfully\");\n          } catch (NFTErr) {\n            console.log(\"Coll error\", NFTErr);\n            // setisPutOnSalePopupClass(\"errorIcon\");\n            // stopCreateNFTPopup();\n            return;\n          }\n          // setisPutOnSalePopupClass(\"checkiconCompleted\");\n          console.log(\"seller sign\", reqParams);\n        }\n        // window.location.href = \"/profile\";\n      } catch (err) {\n        console.log(\"error\", err);\n        // stopCreateNFTPopup();\n        return;\n      }\n    }\n  };\n  const handleShow4 = (address, i) => {\n    setNftContractAddress(address);\n    $(\".active\").removeClass(\"clicked\");\n    $(\"#my_cus_btn\" + i).addClass(\"clicked\");\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (\n        (props.token && props.token.token) ||\n        localStorage.getItem(\"Authorization\")\n      ) {\n        let collectionsList = await getUsersCollections();\n        console.log(\"single \", collectionsList);\n        if (collectionsList)\n          collectionsList = collectionsList?.results.filter((results) => {\n            return results.erc721 === true;\n          });\n        console.log(\"single collectionsList\", collectionsList);\n        setCollections(collectionsList);\n        let profile = await getProfile();\n        // console.log(profile.sProfilePicUrl);\n        // if (profile) {\n        //   setProfilePic(\n        //     \"https://decryptnft.mypinata.cloud/ipfs/\" + profile.sProfilePicUrl\n        //   );\n        // } else {\n        //   setProfilePic(\"../assets/react.svg\");\n        // }\n      }\n    }\n    if (\n      (props.token && props.token.token) ||\n      localStorage.getItem(\"Authorization\")\n    ) {\n      fetchData();\n    }\n  }, [props.token]);\n\n  //*=============================\n\n  return (\n    <div>\n      <GlobalStyles />\n\n      <section\n        className=\"jumbotron breadcumb no-bg\"\n        style={{\n          backgroundImage: `url(${\"./img/background/subheader.jpg\"})`,\n        }}\n      >\n        <div className=\"mainbreadcumb\">\n          <div className=\"container\">\n            <div className=\"row m-10-hor\">\n              <div className=\"col-12\">\n                <h1 className=\"text-center\">Create 2</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-7 offset-lg-1 mb-5\">\n            <div id=\"form-create-item\" className=\"form-border\" action=\"#\">\n              <div\n                style={{\n                  float: \"left\",\n                  flex: \"1\",\n                  overflowY: \"scroll\",\n                  maxHeight: \"500px\",\n                }}\n              >\n                <button\n                  style={{\n                    color: \"rgb(131,100,226)\",\n                    height: \"150px\",\n                    width: \"130px\",\n                    border: \"solid 2px rgb(131,100,226)\",\n                    borderRadius: \"12px\",\n                    float: \"left\",\n                    marginTop: \"40px\",\n                    marginLeft: \"20px\",\n                  }}\n                  onClick={handleOpen}\n                >\n                  Create New\n                </button>\n                <div>\n                  {collections && collections.length >= 1\n                    ? collections.map((collection, index) => {\n                        return (\n                          <li\n                            key={index}\n                            id={`my_cus_btn${index}`}\n                            ref={myRef}\n                            style={{\n                              width: \"fit-content\",\n                              color: \"green\",\n                              height: \"150px\",\n                              width: \"130px\",\n                              border: \"solid 1px green\",\n                              borderRadius: \"12px\",\n                              marginLeft: \"20px\",\n                              marginTop: \"40px\",\n                              float: \"left\",\n                              cursor: \"pointer\",\n                            }}\n                            onClick={(e) => {\n                              handleShow4(collection.sContractAddress, index);\n                              setNextId(collection.nextId);\n                            }}\n                          >\n                            <span\n                              className=\"span-border radio-img\"\n                              style={{ float: \"left\" }}\n                            >\n                              <img\n                                className=\"choose-collection-img image\"\n                                alt=\"\"\n                                height=\"10px\"\n                                width=\"10px\"\n                                src={`https://ipfs.io/ipfs/${collection.sHash}`}\n                              ></img>\n                              {collection.sName}\n                            </span>\n                          </li>\n                        );\n                      })\n                    : \"\"}\n                </div>\n              </div>\n              <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n              >\n                <Box sx={style}>\n                  <input\n                    type=\"file\"\n                    onChange={(e) => {\n                      setImage(e.target.files[0]);\n                    }}\n                  />\n                  <img src={file} style={{ width: \"210px\", height: \"110px\" }} />\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    Title{\"\"}\n                  </Typography>\n\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      value={title}\n                      onChange={(e) => {\n                        setTitle(e.target.value);\n                      }}\n                    ></input>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    Symbol\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Symbol\"\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      value={symbol}\n                      onChange={(e) => {\n                        setSymbol(e.target.value);\n                      }}\n                    ></input>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    {\" \"}\n                    Description{\" \"}\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <textarea\n                      data-autoresize\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      value={description}\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      onChange={(e) => {\n                        setDescription(e.target.value);\n                      }}\n                    ></textarea>\n                  </Typography>\n                  <div className=\"spacer-20\"></div>\n\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h10\"\n                    component=\"h5\"\n                  >\n                    Royalities\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <input\n                      type=\"number\"\n                      value={royalty}\n                      placeholder=\"Description\"\n                      style={{ height: \"30px\", width: \"300px\" }}\n                      onChange={(e) => {\n                        if (Number(e.target.value) > 100) {\n                          console.log(\"Percentage should be less than 100%\");\n                          return;\n                        }\n                        setRoyalty(Number(e.target.value));\n                      }}\n                    ></input>\n                    <br />\n                  </Typography>\n\n                  <div className=\"spacer-20\"></div>\n                  <button\n                    type=\"submit\"\n                    style={{ backgroundColor: \"rgb(131,100,226)\" }}\n                    onClick={() => {\n                      handleCollectionCreate();\n                    }}\n                  >\n                    Create Collection\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    style={{ backgroundColor: \"rgb(131,100,226)\" }}\n                    onClick={handleClose}\n                  >\n                    Cancel\n                  </button>\n                </Box>\n              </Modal>\n\n              <div className=\"field-set\">\n                <div className=\"spacer-single\"></div>\n\n                <h5>Upload file</h5>\n\n                <div className=\"d-create-file\">\n                  <p id=\"file_name\">PNG, JPG, GIF, WEBP or MP4. Max 200mb.</p>\n                  {files.map((x) => (\n                    <p key=\"{index}\">\n                      PNG, JPG, GIF, WEBP or MP4. Max 200mb.{x.name}\n                    </p>\n                  ))}\n                  <div className=\"browse\">\n                    <input\n                      type=\"button\"\n                      id=\"get_file\"\n                      className=\"btn-main\"\n                      value=\"Browse\"\n                    />\n                    <input\n                      id=\"upload_file\"\n                      type=\"file\"\n                      multiple\n                      onChange={onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"switch-with-title\">\n                  <h5>\n                    <i className=\"fa fa- fa-unlock-alt id-color-2 mr10\"></i>\n                    Unlock Once Purchased\n                  </h5>\n                  <div className=\"de-switch\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"switch-unlock\"\n                      className=\"checkbox\"\n                    />\n                    {isActive ? (\n                      <label\n                        htmlFor=\"switch-unlock\"\n                        onClick={unlockHide}\n                      ></label>\n                    ) : (\n                      <label\n                        htmlFor=\"switch-unlock\"\n                        onClick={unlockClick}\n                      ></label>\n                    )}\n                  </div>\n                  <div className=\"clearfix\"></div>\n                  <p className=\"p-info pb-3\">\n                    Unlock content after successful transaction.\n                  </p>\n\n                  {isActive ? (\n                    <div id=\"unlockCtn\" className=\"hide-content\">\n                      <input\n                        type=\"text\"\n                        name=\"item_unlock\"\n                        id=\"item_unlock\"\n                        className=\"form-control\"\n                        placeholder=\"Access key, code to redeem or link to a file...\"\n                      />\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"switch-with-title\">\n                  <h5>\n                    <i className=\"fa fa- fa-unlock-alt id-color-2 mr10\"></i>\n                    Put On Marketplace\n                  </h5>\n                  <div className=\"de-switch\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"switch-unlock1\"\n                      className=\"checkbox\"\n                    />\n                    {isActive1 ? (\n                      <label\n                        htmlFor=\"switch-unlock1\"\n                        onClick={unlockHide1}\n                      ></label>\n                    ) : (\n                      <label\n                        htmlFor=\"switch-unlock1\"\n                        onClick={unlockClick1}\n                      ></label>\n                    )}\n                  </div>\n                  <div className=\"clearfix\"></div>\n                  {isActive1 ? (\n                    <div id=\"unlockCtn\" className=\"hide-content\">\n                      <br />\n                      <h5>Select method</h5>\n                      <br />\n                      <br />\n                      <div className=\"de_tab tab_methods\">\n                        <ul className=\"de_nav\">\n                          <li id=\"btn1\" className=\"active\" onClick={handleShow}>\n                            <span>\n                              <i className=\"fa fa-tag\"></i>Fixed price\n                            </span>\n                          </li>\n                          <li id=\"btn2\" onClick={handleShow1}>\n                            <span>\n                              <i className=\"fa fa-hourglass-1\"></i>Timed auction\n                            </span>\n                          </li>\n                          <li id=\"btn3\" onClick={handleShow2}>\n                            <span>\n                              <i className=\"fa fa-users\"></i>Open for bids\n                            </span>\n                          </li>\n                        </ul>\n\n                        <div className=\"de_tab_content pt-3\">\n                          <div id=\"tab_opt_1\">\n                            <h5>Price</h5>\n                            <input\n                              type=\"text\"\n                              name=\"item_price\"\n                              id=\"item_price\"\n                              className=\"form-control\"\n                              placeholder=\"enter price for one item (ETH)\"\n                            />\n                          </div>\n\n                          <div id=\"tab_opt_2\" className=\"hide\">\n                            <h5>Minimum bid</h5>\n                            <input\n                              type=\"text\"\n                              name=\"item_price_bid\"\n                              id=\"item_price_bid\"\n                              className=\"form-control\"\n                              placeholder=\"enter minimum bid\"\n                            />\n\n                            <div className=\"spacer-20\"></div>\n\n                            <div className=\"row\">\n                              <div className=\"col-md-6\">\n                                <h5>Payment Token</h5>\n                                <select className=\"form-control\">\n                                  <option>USDT</option>\n                                </select>\n                              </div>\n                              <div className=\"col-md-6\">\n                                <h5>Expiration date</h5>\n                                <input\n                                  type=\"date\"\n                                  name=\"bid_expiration_date\"\n                                  id=\"bid_expiration_date\"\n                                  className=\"form-control\"\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div id=\"tab_opt_3\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"switch-with-title\">\n                  <h5>\n                    <i className=\"fa fa- fa-unlock-alt id-color-2 mr10\"></i>\n                    Lazy Minting\n                  </h5>\n                  <div className=\"de-switch\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"switch-unlock2\"\n                      className=\"checkbox\"\n                    />\n                    {isActive2 ? (\n                      <label\n                        htmlFor=\"switch-unlock2\"\n                        onClick={unlockHide2}\n                      ></label>\n                    ) : (\n                      <label\n                        htmlFor=\"switch-unlock2\"\n                        onClick={unlockClick2}\n                      ></label>\n                    )}\n                  </div>\n\n                  <div className=\"spacer-20\"></div>\n\n                  <h5>Title</h5>\n                  <input\n                    type=\"text\"\n                    name=\"item_title\"\n                    id=\"item_title\"\n                    className=\"form-control\"\n                    placeholder=\"e.g. 'Crypto Funk\"\n                  />\n\n                  <div className=\"spacer-10\"></div>\n\n                  <h5>Description</h5>\n                  <textarea\n                    data-autoresize\n                    name=\"item_desc\"\n                    id=\"item_desc\"\n                    className=\"form-control\"\n                    placeholder=\"e.g. 'This is very limited item'\"\n                  ></textarea>\n\n                  <div className=\"clearfix\"></div>\n                  {!isActive2 ? (\n                    <div id=\"unlockCtn\" className=\"hide-content\">\n                      <h5>Collaborator(Optional)</h5>\n                      <input\n                        type=\"text\"\n                        value={name}\n                        name=\"item_title\"\n                        id=\"item_title\"\n                        className=\"form-control\"\n                        placeholder=\"Please Enter Colaborator's Wallet Address\"\n                        onChange={(e) => {\n                          setName(e?.target?.value);\n                        }}\n                      />\n\n                      <input\n                        type=\"text\"\n                        name=\"item_title\"\n                        id=\"item_title\"\n                        value={title}\n                        className=\"form-control\"\n                        placeholder=\"Percent\"\n                        onChange={(e) => {\n                          setTitle(e?.target?.value);\n                        }}\n                      />\n\n                      <input\n                        type=\"button\"\n                        id=\"submit\"\n                        className=\"btn-main\"\n                        value=\"Add Collaborator\"\n                        onClick={handleAdd}\n                      />\n                    </div>\n                  ) : null}\n                </div>\n                <div>\n                  {allData.reverse().map((name, i) => {\n                    return (\n                      <>\n                        <div>\n                          <div className=\"spacer-20\"></div>\n                          <h6>{name?.name}</h6>\n                          <h6>{name?.title}</h6>\n                          <div className=\"spacer-20\"></div>\n                          <input\n                            type=\"button\"\n                            id=\"submit\"\n                            className=\"btn-main\"\n                            value=\"Remove\"\n                            onClick={() => handleRemoveClick(i)}\n                          />{\" \"}\n                        </div>\n                      </>\n                    );\n                  })}\n                </div>\n\n                <div className=\"spacer-20\"></div>\n                <div className=\"spacer-10\"></div>\n\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n\n                <button\n                  style={{\n                    width: \"640px\",\n                    borderRadius: \"20px\",\n                  }}\n                  className=\"btn-main\"\n                  onClick={handleTick}\n                >\n                  {show3 == false\n                    ? \"Show Advanced Settings\"\n                    : \"Hide Advanced Settings\"}\n                </button>\n                <br />\n                <br />\n                {show3 == true ? (\n                  <>\n                    <input\n                      type=\"text\"\n                      value={bg}\n                      placeholder=\"eg.background\"\n                      style={{ border: \"none\" }}\n                      onChange={(e) => {\n                        setInputBg(e?.target?.value);\n                      }}\n                    ></input>\n                    <input\n                      type=\"text\"\n                      placeholder=\"eg.black\"\n                      value={black}\n                      onChange={(e) => {\n                        setInputBlack(e?.target?.value);\n                      }}\n                      style={{ border: \"none\", marginLeft: \"200px\" }}\n                    ></input>\n                    <div className=\"spacer-10\"></div>\n                    <div className=\"spacer-10\"></div>\n\n                    <button className=\"btn-main\" onClick={handleClicking}>\n                      Add Property\n                    </button>\n                  </>\n                ) : null}\n                <div>\n                  {allData1.reverse().map((bg, i) => {\n                    return (\n                      <>\n                        <div>\n                          <div className=\"spacer-20\"></div>\n                          <h6>{bg?.bg}</h6>\n                          <h6>{bg?.black}</h6>\n                          <div className=\"spacer-20\"></div>\n                          <input\n                            type=\"button\"\n                            id=\"submit\"\n                            className=\"btn-main\"\n                            value=\"Remove\"\n                            onClick={() => removeBtn(i)}\n                          />{\" \"}\n                        </div>\n                      </>\n                    );\n                  })}\n                </div>\n\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <div className=\"spacer-10\"></div>\n                <input\n                  type=\"button\"\n                  id=\"submit\"\n                  className=\"btn-main\"\n                  value=\"Create NFT\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-3 col-sm-6 col-xs-12\">\n            <h5>Preview item</h5>\n            <div className=\"nft__item m-0\">\n              <div className=\"de_countdown\">\n                <Clock deadline=\"December, 30, 2021\" />\n              </div>\n              <div className=\"author_list_pp\">\n                <span>\n                  <img\n                    className=\"lazy\"\n                    src=\"./img/author/author-1.jpg\"\n                    alt=\"\"\n                  />\n                  <i className=\"fa fa-check\"></i>\n                </span>\n              </div>\n              <div className=\"nft__item_wrap\">\n                <span>\n                  <img\n                    src=\"./img/collections/coll-item-3.jpg\"\n                    id=\"get_file_2\"\n                    className=\"lazy nft__item_preview\"\n                    alt=\"\"\n                  />\n                </span>\n              </div>\n              <div className=\"nft__item_info\">\n                <span>\n                  <h4>Pinky Ocean</h4>\n                </span>\n                <div className=\"nft__item_price\">\n                  0.08 ETH<span>1/20</span>\n                </div>\n                <div className=\"nft__item_action\">\n                  <span>Place a bid</span>\n                </div>\n                <div className=\"nft__item_like\">\n                  <i className=\"fa fa-heart\"></i>\n                  <span>50</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n    token: state.token,\n    profileData: state.profileData,\n  };\n};\n\nexport default connect(mapStateToProps)(Createpage);\n","/home/dell/Documents/Market/src/components/pages/Profile/index.js",[],"/home/dell/Documents/Market/src/core/auth/index.js",[],"/home/dell/Documents/Market/src/components/Styles.js",[],"/home/dell/Documents/Market/src/apiServices.js",["346"],"import { ethers } from \"ethers\";\nimport { data } from \"jquery\";\n\nconst REACT_APP_API_BASE_URL = \"http://localhost:3000/api/v1\";\n\nexport const exportInstance = async (SCAddress, ABI) => {\n  let provider = new ethers.providers.Web3Provider(window.ethereum);\n  let signer = provider.getSigner();\n  let a = new ethers.Contract(SCAddress, ABI, signer);\n\n  if (a) {\n    return a;\n  } else {\n    return {};\n  }\n};\n\nexport const Register = async (account) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      sWalletAddress: account,\n    }),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/auth/register\",\n      requestOptions\n    );\n\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const data = isJson && (await response.json());\n\n    // check for error response\n    if (!response.ok) {\n      // get error message from body or default to response status\n      const error = (data && data.message) || response.status;\n      return Promise.reject(error);\n    }\n  } catch (error) {\n    //   this.setState({ postId: data.id });\n\n    // this.setState({ errorMessage: error.toString() });\n    console.error(\"There was an error!\", error);\n  }\n};\n\nexport const Login = async (account) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      sWalletAddress: account,\n    }),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/auth/login\",\n      requestOptions\n    );\n\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const data = isJson && (await response.json());\n    // check for error response\n    if (!response.ok) {\n      // get error message from body or default to response status\n      const error = (data && data.message) || response.status;\n      return Promise.reject(error);\n    }\n    console.log(\"token\", data.token);\n    localStorage.setItem(\"Authorization\", data.token);\n    return data.token;\n    //   this.setState({ postId: data.id });\n  } catch (error) {\n    // this.setState({ errorMessage: error.toString() });\n    console.error(\"There was an error!\", error);\n  }\n};\n\nexport const Logout = async () => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: getHeaders(),\n    },\n  };\n  const response = await fetch(\n    REACT_APP_API_BASE_URL + \"/auth/Logout\",\n    requestOptions\n  );\n\n  const isJson = response.headers\n    .get(\"content-type\")\n    ?.includes(\"application/json\");\n\n  const data = isJson && (await response.json());\n  console.log(data);\n\n  localStorage.removeItem(\"Authorization\", data.token);\n};\n\nexport const getProfile = async () => {\n  const response = await fetch(REACT_APP_API_BASE_URL + \"/user/profile\", {\n    headers: { Authorization: getHeaders() },\n  });\n  const isJson = response.headers\n    .get(\"content-type\")\n    ?.includes(\"application/json\");\n  const data = isJson && (await response.json());\n  return data;\n};\n\nexport const getHeaders = () => {\n  let t = localStorage.getItem(\"Authorization\");\n  return t && t !== undefined ? t : \"\";\n};\n\nexport const checkuseraddress = async (account) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      sWalletAddress: account,\n    }),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/auth/checkuseraddress\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const data = isJson && (await response.json());\n    console.log(data.message);\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateProfile = async (account, data) => {\n  let formData = new FormData();\n\n  formData.append(\"sUserName\", data.uname ? data.uname : \"\");\n  formData.append(\"sFirstname\", data.fname ? data.fname : \"\");\n  formData.append(\"sLastname\", data.lname ? data.lname : \"\");\n  formData.append(\"sBio\", data.bio ? data.bio : \"\");\n  formData.append(\"sWebsite\", data.website ? data.website : \"\");\n  formData.append(\"sEmail\", data.email ? data.email : \"\");\n  formData.append(\"sWalletAddress\", account);\n  formData.append(\"userProfile\", data.profilePic ? data.profilePic : \"\");\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: formData,\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/user/updateProfile\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.message;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const Follow = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify({ id: data }),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/user/follow\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.message;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetAllUserDetails = async () => {\n  let searchData = {\n    length: 8,\n    start: 0,\n    sTextsearch: \"\",\n    sSellingType: \"\",\n    sSortingType: \"Recently Added\",\n  };\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(searchData),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/user/allDetails\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetIndividualAuthorDetail = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/user/profileDetail\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    console.log(isJson);\n    const datas = isJson && (await response.json());\n\n    if (datas.data) return datas.data;\n    return [];\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getUsersCollections = async () => {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/collection/collectionList\",\n      requestOptions\n    );\n\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas);\n    if (datas) return datas;\n    return [];\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getNFTList = async () => {\n  // let searchData = {\n  //   length: 9,\n  //   start: 0,\n  //   eType: [\"All\"],\n  //   sTextsearch: \"\",\n  //   sSellingType: \"\",\n  //   sSortingType: \"Recently Added\",\n  //   sFrom: 0,\n  //   sTo: 0,\n  //   sGenre: [],\n  // };\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getAllNfts\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const createCollection = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: data,\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/collection/createCollection\",\n      requestOptions\n    );\n    console.log(\"response\", response);\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas.message);\n    return datas.message;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getAllCollections = async () => {\n  const requestOptions = {\n    method: \"GET\",\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getCollections\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getCollectionWiseList = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/allCollectionWiseList\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const Like = async () => {};\n\nexport const getOrderDetails = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/order/getOrder\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(\"get order data is--->\", datas);\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetOnSaleItems = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getOnSaleItems\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas);\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetNftDetails = async (id) => {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/viewnft/\" + id,\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data ? datas.data : [];\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const SetNFTOrder = async (data) => {\n  try {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        Authorization: localStorage.getItem(\"Authorization\"),\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/setNFTOrder\",\n      requestOptions\n    );\n    console.log(\"record updated\", response);\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas);\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const UpdateOrderStatus = async (data) => {\n  const requestOptions = {\n    method: \"PUT\",\n\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/order/updateOrder\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const LikeNft = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/like\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetCollectionsByAddress = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getCollectionDetailsByAddress/\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetCollectionsById = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getCollectionDetailsById/\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetMyNftList = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getNFTList\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetMyCollectionsList = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/myCollectionList\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetMyLikedNft = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getUserLikedNfts\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetMyOnSaleNft = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getUserOnSaleNfts\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(\"dataaasss on sale\", datas);\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetCollectionsNftList = async (data, owned = false) => {\n  console.log(\"Data\", data);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      owned\n        ? REACT_APP_API_BASE_URL + \"/nft/getCollectionNFT\"\n        : REACT_APP_API_BASE_URL + \"/nft/getCollectionNFTOwned\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetSearchedNft = async (data, owned = false) => {\n  console.log(\"Data\", data);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/getSearchedNft\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateBidNft = async (data) => {\n  console.log(\"dataaa\", data);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/bid/updateBidNft\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const fetchBidNft = async (data) => {\n  console.log(\"Data\", data);\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/bid/fetchBidNft\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetOrdersByNftId = async (data) => {\n  //   {\n  //     \"nftId\": \"6229812aa2c3ed3120651ca6\",\n  //     \"sortKey\": \"oTokenId\",\n  //     \"sortType\": -1,\n  //     \"page\": 1,\n  //     \"limit\": 4\n  // }\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/order/getOrdersByNftId\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const createNft = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: data,\n  };\n  try {\n    console.log(\"create nft\");\n    // for (var value of data.values()) {\n    //   console.log(value);\n    // }\n\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/create\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas);\n\n    return datas;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const createOrder = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Authorization: localStorage.getItem(\"Authorization\"),\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    console.log(\"put on marketplace\");\n\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/order/createOrder\",\n      requestOptions\n    );\n\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas);\n\n    return datas;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const DeleteOrder = async (data) => {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    console.log(\"remove\");\n\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/order/deleteOrder\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const TransferNfts = async (data) => {\n  //   {\n  //     \"nftId\": \"6229812aa2c3ed3120651ca6\",\n  //     \"sortKey\": \"oTokenId\",\n  //     \"sortType\": -1,\n  //     \"page\": 1,\n  //     \"limit\": 4\n  // }\n  console.log(\"transfer nft\");\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/nft/transferNfts\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const createBidNft = async (data) => {\n  console.log(\"place a bid\");\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/bid/createBidNft\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const acceptBid = async (data) => {\n  console.log(\"accept bid\");\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"Authorization\"),\n    },\n    body: JSON.stringify(data),\n  };\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/bid/acceptBidNft\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const InsertHistory = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/history/insert\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    console.log(datas);\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const GetHistory = async (data) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  try {\n    let response = await fetch(\n      REACT_APP_API_BASE_URL + \"/history/fetchHistory\",\n      requestOptions\n    );\n    const isJson = response.headers\n      .get(\"content-type\")\n      ?.includes(\"application/json\");\n    const datas = isJson && (await response.json());\n    return datas.data;\n  } catch (err) {\n    return err;\n  }\n};\n","/home/dell/Documents/Market/src/core/api.js",[],"/home/dell/Documents/Market/src/Config/contracts.js",[],"/home/dell/Documents/Market/src/components/components/ColumnNewRedux.js",[],"/home/dell/Documents/Market/src/components/components/Particle.js",[],"/home/dell/Documents/Market/src/components/components/TopFilterBar.js",[],"/home/dell/Documents/Market/src/components/components/footer.js",[],"/home/dell/Documents/Market/src/components/components/SliderMainParticleGrey.js",[],"/home/dell/Documents/Market/src/components/components/FeatureBox.js",[],"/home/dell/Documents/Market/src/components/components/CarouselCollectionRedux.js",[],"/home/dell/Documents/Market/src/components/components/CarouselNewRedux.js",[],"/home/dell/Documents/Market/src/components/components/AuthorListRedux.js",[],"/home/dell/Documents/Market/src/components/components/wallet.js",[],"/home/dell/Documents/Market/src/components/components/Clock.js",["347","348","349"],"import React, { Component } from \"react\";\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'  ;\n\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n  nextBtn = () => {\n    const { history } = this.props;\n\n    history.push(\"/ItemDetail\");\n  };\n  componentDidMount() {\n    this.getTimeUntil(this.props.deadline);\n    setInterval(() => this.getTimeUntil(this.props.deadline), 1000);\n  }\n  leading0(num) {\n    return num < 10 ? \"0\" + num : num;\n  }\n  getTimeUntil(deadline) {\n    const time = Date.parse(deadline) - Date.parse(new Date());\n    if (time < 0) {\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      this.setState({ days, hours, minutes, seconds });\n    }\n  }\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state,callback)=>{\n        return;\n    };\n  }\n\n  render() {\n    return (\n      <div>\n    \n        <div className=\"Clock-days\">{this.leading0(this.state.days)}d</div>\n        <div className=\"Clock-hours\">\n          {this.leading0(this.state.hours)}h\n        </div>\n        <div className=\"Clock-minutes\">\n          {this.leading0(this.state.minutes)}m\n        </div>\n        <div className=\"Clock-seconds\">\n          {this.leading0(this.state.seconds)}s\n        </div>\n      </div>\n    );\n  }\n}\nexport default Clock;\n","/home/dell/Documents/Market/src/helpers/constants.js",[],"/home/dell/Documents/Market/src/helpers/getterFunctions.js",["350","351","352","353","354","355","356","357","358"],"import {\n  exportInstance,\n  GetCollectionsByAddress,\n  GetCollectionsNftList,\n  GetMyCollectionsList,\n  GetMyLikedNft,\n  GetMyNftList,\n  GetMyOnSaleNft,\n  GetNftDetails,\n  getOrderDetails,\n} from \"../apiServices\";\nimport { ethers } from \"ethers\";\nimport contracts from \"../Config/contracts\";\n\n// const ipfsAPI = require(\"ipfs-api\");\n// const ipfs = ipfsAPI(\"ipfs.infura.io\", \"5001\", {\n//   protocol: \"https\",\n//   auth: \"21w11zfV67PHKlkAEYAZWoj2tsg:f2b73c626c9f1df9f698828420fa8439\",\n// });\n\nconst toTypedOrder = (\n  account,\n  tokenAddress,\n  id,\n  quantity,\n  listingType,\n  paymentTokenAddress,\n  valueToPay,\n  deadline,\n  bundleTokens,\n  bundleTokensQuantity,\n  salt\n) => {\n  const domain = {\n    chainId: 80001,\n    name: \"LN Marketplace\",\n    verifyingContract: contracts.MARKETPLACE,\n    version: \"1\",\n  };\n  const types = {\n    Order: [\n      { name: \"user\", type: \"address\" },\n      { name: \"tokenAddress\", type: \"address\" },\n      { name: \"tokenId\", type: \"uint256\" },\n      { name: \"quantity\", type: \"uint256\" },\n      { name: \"listingType\", type: \"uint256\" },\n      { name: \"paymentToken\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n      { name: \"bundleTokens\", type: \"uint256[]\" },\n      { name: \"bundleTokensQuantity\", type: \"uint256[]\" },\n      { name: \"salt\", type: \"uint256\" },\n    ],\n  };\n\n  const value = {\n    user: account,\n    tokenAddress: tokenAddress,\n    tokenId: id,\n    quantity: quantity,\n    listingType: listingType,\n    paymentToken: paymentTokenAddress,\n    value: valueToPay,\n    deadline: deadline,\n    bundleTokens: bundleTokens,\n    bundleTokensQuantity: bundleTokensQuantity,\n    salt: salt,\n  };\n\n  return { domain, types, value };\n};\n\nexport const readReceipt = async (hash) => {\n  try {\n    let provider = new ethers.providers.Web3Provider(window.ethereum);\n    const receipt = await provider.getTransactionReceipt(hash.hash);\n    let contractAddress = receipt.logs[0].address;\n    return contractAddress;\n  } catch (e) {\n    console.log(\"error in api\", e);\n  }\n};\n\nexport const getSignature = async (signer, ...args) => {\n  try {\n    console.log(\"111\");\n    const order = toTypedOrder(...args);\n    console.log(\"order is---->\", order);\n    let provider = new ethers.providers.Web3Provider(window.ethereum);\n    console.log(\"222\");\n    const signer1 = provider.getSigner();\n    console.log(\"signer1=========>\", signer1.address);\n    console.log(\"333\");\n    console.log(args);\n    const signedTypedHash = await signer1._signTypedData(\n      order.domain,\n      order.types,\n      order.value\n    );\n    console.log(\"444\");\n    const sig = ethers.utils.splitSignature(signedTypedHash);\n    console.log(\"555\");\n\n    return [sig.v, sig.r, sig.s];\n  } catch (e) {\n    if (e.code === 4001) {\n      console.log(\"User denied \");\n      return false;\n    }\n    console.log(\"error in api\", e);\n    return false;\n  }\n};\n","/home/dell/Documents/Market/src/helpers/sendFunctions.js",["359","360","361","362","363","364","365"],"import { BigNumber } from \"big-number\";\nimport { ethers } from \"ethers\";\n\nimport simplerERC721ABI from \"./../Config/abis/simpleERC721.json\";\nimport simplerERC1155ABI from \"../Config/abis/simpleERC1155.json\";\nimport marketPlaceABI from \"../Config/abis/marketplace.json\";\nimport Creator1 from \"../Config/abis/creatorV1.json\";\nimport { readReceipt } from \"./getterFunctions\";\n\nimport {\n  exportInstance,\n  getOrderDetails,\n  UpdateOrderStatus,\n  DeleteOrder,\n  InsertHistory,\n  createCollection,\n} from \"../apiServices\";\n\nexport const handleCollectionCreation = async (\n  isSingle,\n  collectionData,\n  account\n) => {\n  console.log(\"collection data\", collectionData);\n  // let Provider = new ethers.providers.Web3Provider(window.ethereum);\n  // const Signer = await Provider.getSigner();\n  // const creator = new ethers.Contract(\n  //   \"0x00e8938EFb57A1A135c4f6fDBCee6CF9E64777c8\",\n  //   Creator1.abi,\n  //   Signer\n  // );\n\n  let creator = await exportInstance(\n    \"0x00e8938EFb57A1A135c4f6fDBCee6CF9E64777c8\",\n    Creator1.abi\n  );\n  console.log(creator);\n  let res1;\n  let contractAddress;\n  let fd;\n  console.log(collectionData);\n  try {\n    if (isSingle)\n      res1 = await creator.deploySimpleERC721(\n        collectionData.sName,\n        collectionData.symbol,\n        collectionData.nftFile,\n        collectionData.sRoyaltyPercentage\n      );\n    else {\n      res1 = await creator.deploySimpleERC1155(\n        collectionData.nftFile,\n        collectionData.sRoyaltyPercentage\n      );\n    }\n    let hash = res1;\n    res1 = await res1.wait();\n    if (res1.status === 0) {\n      // NotificationManager.error(\"Transaction failed\");\n      console.log(\"Transaction Failed S\");\n      return;\n    }\n    contractAddress = await readReceipt(hash);\n    console.log(\"contract receipt\", contractAddress);\n    let royalty = await exportInstance(\n      contractAddress,\n      isSingle ? simplerERC721ABI.abi : simplerERC1155ABI.abi\n    );\n\n    let res = await royalty.setDefaultRoyaltyDistribution(\n      [account],\n      [collectionData.sRoyaltyPercentage]\n    );\n    res = await res.wait();\n    console.log(collectionData.sName);\n    console.log(collectionData.sDescription);\n    console.log(\"==========\", collectionData.nftFile);\n    if (res.status === 0) {\n      // NotificationManager.error(\"Transaction failed\");\n      console.log(\"Transaction Failed B\");\n      return;\n    }\n\n    if (res1.status === 1) {\n      fd = new FormData();\n\n      fd.append(\"sName\", collectionData.sName);\n      fd.append(\"sDescription\", collectionData.sDescription);\n      fd.append(\"nftFile\", collectionData.nftFile);\n      fd.append(\"sContractAddress\", contractAddress);\n      fd.append(\n        \"erc721\",\n        isSingle ? JSON.stringify(true) : JSON.stringify(false)\n      );\n      fd.append(\"sRoyaltyPercentage\", collectionData.sRoyaltyPercentage);\n      fd.append(\"quantity\", collectionData.quantity);\n    }\n    await createCollection(fd);\n    console.log(await createCollection(fd));\n\n    console.log(\"Collection Created Successfully\");\n    return true;\n  } catch (e) {\n    console.log(\"Transaction Failed A\");\n\n    console.log(\"error in contract function call\", e);\n    if (e.code === 401) {\n      // NotificationManager.error(\"User denied \");\n      console.log(\"User Denied\");\n      return false;\n    }\n  }\n};\n","/home/dell/Documents/Market/src/components/menu/AccountModal/Accountmodal.jsx",["366","367","368","369","370"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { connect } from \"react-redux\";\r\nimport { accountUpdate, tokenUpdate } from \"../../../redux/actions\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport WalletLink from \"walletlink\";\r\nimport COINBASE_ICON from \"./../../../assets/react.svg\";\r\nimport { Networks } from \"./networks\";\r\nimport {\r\n  Login,\r\n  Logout,\r\n  Register,\r\n  checkuseraddress,\r\n} from \"../../../apiServices\";\r\n// import Authereum from \"authereum\";\r\n\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport PopupModal from \"./popupModal\";\r\nimport { BsExclamationLg } from \"react-icons/bs\";\r\n// import \"./Mode.css\";\r\n\r\nfunction initWeb3(provider) {\r\n  const web3 = new Web3(provider);\r\n\r\n  web3.eth.extend({\r\n    methods: [\r\n      {\r\n        name: \"chainId\",\r\n        call: \"eth_chainId\",\r\n        outputFormatter: web3.utils.hexToNumber,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return web3;\r\n}\r\n\r\nconst AccountModal = (props) => {\r\n  const [currentAccount, setCurrentAccount] = useState(null);\r\n  const [wrongNetwork, setWrongNetwork] = useState(false);\r\n  const [isPopup, setIsPopup] = useState(false);\r\n  let web3Modal = null;\r\n  let web3 = null;\r\n  let provider = null;\r\n\r\n  // to initilize the web3Modal\r\n\r\n  const init = async () => {\r\n    const providerOptions = {\r\n      walletconnect: {\r\n        package: WalletConnectProvider,\r\n        options: {\r\n          rpc: {\r\n            80001: process.env.REACT_APP_RPC_URL,\r\n          },\r\n          network: process.env.REACT_APP_NETWORK,\r\n          chainId: process.env.REACT_APP_CHAIN_ID,\r\n          // infuraId: YOUR_INFURA_KEY,\r\n        },\r\n      },\r\n\r\n      \"custom-coinbase\": {\r\n        display: {\r\n          logo: COINBASE_ICON,\r\n          name: \"Coinbase\",\r\n          description: \"Scan with WalletLink to connect\",\r\n        },\r\n        options: {\r\n          appName: \"app\", // Your app name\r\n          networkUrl: process.env.REACT_APP_RPC_URL,\r\n          chainId: process.env.REACT_APP_CHAIN_ID,\r\n        },\r\n        package: WalletLink,\r\n        connector: async (_, options) => {\r\n          const { appName, networkUrl, chainId } = options;\r\n          const walletLink = new WalletLink({\r\n            appName,\r\n          });\r\n          const provider = walletLink.makeWeb3Provider(networkUrl, chainId);\r\n          await provider.enable();\r\n          return provider;\r\n        },\r\n      },\r\n    };\r\n\r\n    web3Modal = new Web3Modal({\r\n      network: process.env.REACT_APP_NETWORK,\r\n      cacheProvider: true,\r\n      providerOptions: providerOptions,\r\n    });\r\n    provider = await detectEthereumProvider();\r\n  };\r\n\r\n  init();\r\n\r\n  useEffect(() => {\r\n    async function update() {\r\n      if (window.sessionStorage.getItem(\"selected_account\") != null) {\r\n        setCurrentAccount(window.sessionStorage.getItem(\"selected_account\"));\r\n        if (provider) {\r\n          web3 = await initWeb3(provider);\r\n          const chainId = await web3.eth.getChainId();\r\n          let bal = await web3.eth.getBalance(\r\n            window.sessionStorage.getItem(\"selected_account\")\r\n          );\r\n          console.log(\"bal\", bal);\r\n          props.dispatch(\r\n            accountUpdate({\r\n              account: window.sessionStorage.getItem(\"selected_account\"),\r\n              chainId: chainId,\r\n              balance: bal,\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    update();\r\n  }, [window.sessionStorage.getItem(\"selected_Account\"), web3, provider]);\r\n  // action on connect wallet button\r\n\r\n  const onConnect = async () => {\r\n    //Detect Provider\r\n    try {\r\n      provider = await web3Modal.connect();\r\n      if (provider.open) {\r\n        await provider.open();\r\n        web3 = initWeb3(provider);\r\n      }\r\n      window.sessionStorage.setItem(\"Provider\", provider);\r\n      if (!provider) {\r\n        console.log(\"no provider found\");\r\n      } else {\r\n        web3 = new Web3(provider);\r\n        await ConnectWallet();\r\n      }\r\n      const chainId = await web3.eth.getChainId();\r\n\r\n      if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\r\n        setWrongNetwork(true);\r\n        setIsPopup(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // connect wallet\r\n\r\n  const ConnectWallet = async () => {\r\n    if (\"caches\" in window) {\r\n      caches.keys().then((names) => {\r\n        // Delete all the cache files\r\n        names.forEach((name) => {\r\n          caches.delete(name);\r\n        });\r\n      });\r\n    }\r\n    try {\r\n      const chainId = await web3.eth.getChainId();\r\n\r\n      if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\r\n        console.log(\"Wrong network\");\r\n        setWrongNetwork(true);\r\n        setIsPopup(true);\r\n        props.dispatch(\r\n          accountUpdate({\r\n            account: null,\r\n            chainId: chainId,\r\n            balance: null,\r\n          })\r\n        );\r\n      } else {\r\n        // Get list of accounts of the connected wallet\r\n        setWrongNetwork(false);\r\n        setIsPopup(false);\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        // MetaMask does not give you all accounts, only the selected account\r\n        window.sessionStorage.setItem(\"selected_account\", accounts[0]);\r\n        const chainId = await web3.eth.getChainId();\r\n        let bal = await web3.eth.getBalance(accounts[0]);\r\n        console.log(\"bal\", bal);\r\n        window.sessionStorage.setItem(\"balance\", bal);\r\n        props.dispatch(\r\n          accountUpdate({\r\n            account: accounts[0],\r\n            chainId: chainId,\r\n            balance: bal,\r\n          })\r\n        );\r\n        setCurrentAccount(accounts[0]);\r\n\r\n        let response1 = await checkuseraddress(\r\n          window.sessionStorage.getItem(\"selected_account\")\r\n        );\r\n        console.log(response1);\r\n        // let response = \"User Not found\";\r\n\r\n        if (response1.message === \"User Not Found\") {\r\n          try {\r\n            await Register(window.sessionStorage.getItem(\"selected_account\"));\r\n            console.log(\"User Registered Successfully\");\r\n            // setTimeout(() => (window.location.href = \"/profile\"), 2000);\r\n          } catch (e) {\r\n            console.log(\"Failed to Register\");\r\n            return;\r\n          }\r\n          try {\r\n            let token = await Login(\r\n              window.sessionStorage.getItem(\"selected_account\")\r\n            );\r\n            console.log(token);\r\n            props.dispatch(\r\n              tokenUpdate({\r\n                token: token,\r\n              })\r\n            );\r\n            console.log(\"Logged In Successfully\");\r\n\r\n            // setTimeout(() => (window.location.href = \"/profile\"), 2000);\r\n          } catch (e) {\r\n            console.log(\"Failed to Login\");\r\n            return;\r\n          }\r\n        } else {\r\n          try {\r\n            let token = await Login(\r\n              window.sessionStorage.getItem(\"selected_account\")\r\n            );\r\n            console.log(token);\r\n            props.dispatch(\r\n              tokenUpdate({\r\n                token: token,\r\n              })\r\n            );\r\n            console.log(\"Logged In Successfully\");\r\n            // setTimeout(() => (window.location.href = \"/profile\"), 2000);\r\n            // window.location.href = \"/profile\";\r\n          } catch (e) {\r\n            console.log(\"Failed to Login\");\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.message) {\r\n        console.log(\"error\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  //  disconnect wallet\r\n\r\n  const onDisconnect = useCallback(async () => {\r\n    if (!web3) {\r\n      window.sessionStorage.removeItem(\"selected_account\");\r\n    }\r\n    if (web3) {\r\n      const chainId = await web3.eth.getChainId();\r\n      props.dispatch(\r\n        accountUpdate({\r\n          account: null,\r\n          chainId: chainId,\r\n          balance: null,\r\n        })\r\n      );\r\n    }\r\n    window.sessionStorage.removeItem(\"selected_account\");\r\n    window.sessionStorage.removeItem(\"Provider\");\r\n    window.sessionStorage.removeItem(\"balance\");\r\n    await setCurrentAccount(null);\r\n    await web3Modal.clearCachedProvider();\r\n    web3Modal = null;\r\n    await Logout();\r\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\r\n      await web3.currentProvider.disconnect();\r\n    }\r\n    if (\"caches\" in window) {\r\n      caches.keys().then((names) => {\r\n        // Delete all the cache files\r\n        names.forEach((name) => {\r\n          caches.delete(name);\r\n        });\r\n      });\r\n\r\n      if (!wrongNetwork) window.location.reload(true);\r\n    }\r\n  }, [currentAccount]);\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      provider.on(\"chainChanged\", async (_chainId) => {\r\n        const chainId = parseInt(_chainId, 16);\r\n        console.log(process.env.REACT_APP_CHAIN_ID);\r\n        console.log(chainId);\r\n\r\n        if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\r\n          setWrongNetwork(true);\r\n          setIsPopup(true);\r\n          props.dispatch(\r\n            accountUpdate({\r\n              account: null,\r\n              chainId: chainId,\r\n              balance: null,\r\n            })\r\n          );\r\n\r\n          props.dispatch(\r\n            tokenUpdate({\r\n              token: null,\r\n            })\r\n          );\r\n          onDisconnect();\r\n        } else {\r\n          console.log(\"accountt\", currentAccount);\r\n          setWrongNetwork(false);\r\n          setIsPopup(false);\r\n          web3 = initWeb3(provider);\r\n          let bal = await web3.eth.getBalance(currentAccount);\r\n          console.log(\"bal\", bal);\r\n          window.sessionStorage.setItem(\"balance\", bal);\r\n          console.log(\"accounttt\", currentAccount);\r\n          props.dispatch(\r\n            accountUpdate({\r\n              account: currentAccount,\r\n              chainId: chainId,\r\n              balance: bal,\r\n            })\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [onDisconnect, currentAccount, props, provider]);\r\n\r\n  // function to detect account change\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      provider.on(\"accountsChanged\", async function (accounts) {\r\n        const id = await provider.request({ method: \"eth_chainId\" });\r\n        const chainId = parseInt(id, 16);\r\n        if (\r\n          chainId.toString() === process.env.REACT_APP_CHAIN_ID &&\r\n          currentAccount\r\n        ) {\r\n          console.log(\"accountt\", accounts[0]);\r\n          setCurrentAccount(accounts[0]);\r\n          window.sessionStorage.removeItem(\"selected_account\");\r\n          window.sessionStorage.setItem(\"selected_account\", accounts[0]);\r\n          web3 = initWeb3(provider);\r\n          let bal = await web3.eth.getBalance(accounts[0]);\r\n          console.log(\"bal\", bal);\r\n          window.sessionStorage.setItem(\"balance\", bal);\r\n          props.dispatch(\r\n            accountUpdate({\r\n              account: accounts[0],\r\n              chainId: chainId,\r\n              balance: bal,\r\n            })\r\n          );\r\n          let response = await checkuseraddress(\r\n            window.sessionStorage.getItem(\"selected_account\")\r\n          );\r\n          if (response === \"User not found\") {\r\n            try {\r\n              await Register(\r\n                window.sessionStorage.getItem(\"selected_account\", accounts[0])\r\n              );\r\n              // setTimeout(() => (window.location.href = \"/profile\"), 2000);\r\n              console.log(\"New Wallet Registered Successfully\");\r\n            } catch (e) {\r\n              console.log(\"Failed to Register\");\r\n              return;\r\n            }\r\n            try {\r\n              let token = await Login(\r\n                window.sessionStorage.getItem(\"selected_account\")\r\n              );\r\n              props.dispatch(\r\n                tokenUpdate({\r\n                  token: token,\r\n                })\r\n              );\r\n              console.log(\"Logged In Successfully\");\r\n              // setTimeout(() => (window.location.href = \"/profile\"), 2000);\r\n              // window.location.href = \"/profile\";\r\n            } catch (e) {\r\n              console.log(\"Failed to Login\");\r\n              return;\r\n            }\r\n          } else {\r\n            try {\r\n              let token = await Login(\r\n                window.sessionStorage.getItem(\"selected_account\")\r\n              );\r\n              props.dispatch(\r\n                tokenUpdate({\r\n                  token: token,\r\n                })\r\n              );\r\n              console.log(\"Logged In Successfully\");\r\n              // setTimeout(() => (window.location.href = \"/profile\"), 2000);\r\n              // window.location.href = \"/profile\";\r\n            } catch (e) {\r\n              console.log(\"Failed to Login\");\r\n              return;\r\n            }\r\n          }\r\n        } else if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\r\n          setWrongNetwork(true);\r\n          setIsPopup(true);\r\n\r\n          props.dispatch(\r\n            accountUpdate({\r\n              account: null,\r\n              chainId: chainId,\r\n              balance: null,\r\n            })\r\n          );\r\n          window.sessionStorage.removeItem(\"selected_account\");\r\n          setCurrentAccount(null);\r\n          await onDisconnect();\r\n        }\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }, [currentAccount, provider]);\r\n\r\n  // function to detect network change\r\n\r\n  useEffect(() => {\r\n    async function updateAccount() {\r\n      if (provider) {\r\n        const id = await provider.request({ method: \"eth_chainId\" });\r\n        window.sessionStorage.setItem(\"selected_account\", currentAccount);\r\n\r\n        const chainId = parseInt(id, 16);\r\n        web3 = initWeb3(provider);\r\n        let bal = await web3.eth.getBalance(currentAccount);\r\n        console.log(\"bal\", bal);\r\n        window.sessionStorage.setItem(\"balance\", currentAccount);\r\n        console.log(\"accounttt\", currentAccount);\r\n        props.dispatch(\r\n          accountUpdate({\r\n            account: currentAccount,\r\n            chainId: chainId,\r\n            balance: bal,\r\n          })\r\n        );\r\n      }\r\n    }\r\n    if (currentAccount) {\r\n      updateAccount();\r\n    }\r\n  }, [currentAccount, provider]);\r\n\r\n  const changeNetwork = async ({ networkName }) => {\r\n    try {\r\n      console.log(\"networkName\", networkName);\r\n      if (!window.ethereum) throw new Error(\"No crypto wallet found\");\r\n      await window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n          {\r\n            ...Networks[networkName],\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      // setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleNetworkSwitch = async (networkName) => {\r\n    await changeNetwork({ networkName });\r\n    onConnect();\r\n  };\r\n\r\n  const togglePopup = () => {\r\n    setIsPopup(!isPopup);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn-main\"\r\n        style={{ color: props.color }}\r\n        onClick={currentAccount ? onDisconnect : onConnect}\r\n      >\r\n        {window.sessionStorage.getItem(\"selected_account\") &&\r\n        window.sessionStorage.getItem(\"selected_account\") !== \"undefined\"\r\n          ? window.sessionStorage.getItem(\"selected_account\").slice(0, 5) +\r\n            \"...\" +\r\n            window.sessionStorage.getItem(\"selected_account\").slice(37, 42)\r\n          : \"Connect Wallet\"}\r\n      </button>\r\n      {/* {wrongNetwork ? (\r\n        <>\r\n          {isPopup && (\r\n            <PopupModal\r\n              content={\r\n                <div className=\"popup-content\">\r\n                  <h2>WRONG NETWORK</h2>\r\n                  <p>Please switch to {process.env.REACT_APP_NETWORK}</p>\r\n                  <button\r\n                    className=\"btn-main content-btn\"\r\n                    style={{ color: props.color }}\r\n                    onClick={() =>\r\n                      handleNetworkSwitch(process.env.REACT_APP_NETWORK)\r\n                    }\r\n                  >\r\n                    Switch Network\r\n                  </button>\r\n                </div>\r\n              }\r\n              handleClose={togglePopup}\r\n            />\r\n          )}\r\n        </>\r\n      ) : null} */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    account: state.account,\r\n    token: state.token,\r\n    profileData: state.profileData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AccountModal);\r\n","/home/dell/Documents/Market/src/store/reducers/index.js",[],"/home/dell/Documents/Market/src/core/auth/request.js",[],"/home/dell/Documents/Market/src/store/selectors/index.js",[],"/home/dell/Documents/Market/src/store/actions/thunks/index.js",[],"/home/dell/Documents/Market/src/store/utils.js",[],"/home/dell/Documents/Market/src/components/components/NftCard.js",[],"/home/dell/Documents/Market/src/components/components/NftMusicCard.js",["371","372"],"import React, { memo, useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport Clock from \"./Clock\";\nimport { useNavigate } from 'react-router-dom';\nimport api from '../../core/api';\n\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\n//react functional component\nconst NftMusicCard = ({ nft, audioUrl, className = 'd-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4', height, onImgLoad }) => {\n    const navigate = useNavigate();\n    const navigateTo = (link) => {\n        navigate(link);\n    }\n\n    const useAudio = (url) => {\n        const [audio] = useState(new Audio(url));\n        const [playing, setPlaying] = useState(false);\n      \n        const toggle = () => setPlaying(!playing);\n      \n        useEffect(() => {\n            playing ? audio.play() : audio.pause();\n          },\n          [playing]\n        );\n      \n        useEffect(() => {\n          audio.addEventListener('ended', () => setPlaying(false));\n          return () => {\n            audio.removeEventListener('ended', () => setPlaying(false));\n            audio.pause();\n          };\n        }, []);\n      \n        return [playing, toggle];\n    };\n\n    const [playing, toggle] = useAudio(audioUrl);\n\n    return (\n        <div className={className}>\n            <div className=\"nft__item m-0\">\n                { nft.deadline &&\n                    <div className=\"de_countdown\">\n                        <Clock deadline={nft.deadline} />\n                    </div>\n                }\n                <div className=\"author_list_pp\">\n                    <span onClick={()=> navigateTo(nft.author_link)}>                                    \n                        <img className=\"lazy\" src={api.baseUrl + nft.author.avatar.url} alt=\"\" style={{width: '50px', height: '50px', objectFit: 'cover'}}/>\n                        <i className=\"fa fa-check\"></i>\n                    </span>\n                </div>\n                <div className=\"nft__item_wrap\" style={{height: `${height}px`}}>\n                    <Outer>\n                    <span>\n                        <img onLoad={onImgLoad} src={api.baseUrl + nft.preview_image.url} className=\"lazy nft__item_preview\" alt=\"\"/>\n                    </span>\n                    </Outer>\n                    <div className=\"nft_type_wrap\">\n                        <div onClick={toggle} className=\"player-container\">\n                            <div className={`play-pause ${playing ? 'pause' : 'play'}`}></div>\n                        </div>\n                        <div className={`circle-ripple ${playing ? 'play' : 'init'}`}></div>\n                    </div>\n                </div>\n                <div className=\"nft__item_info\">\n                    <span onClick={() => navigateTo(`${nft.nft_link}/${nft.id}`)}>\n                        <h4>{nft.title}</h4>\n                    </span>\n                    <div className=\"nft__item_price\">\n                        {nft.price} ETH\n                        <span>{nft.bid}/{nft.max_bid}</span>\n                    </div>\n                    <div className=\"nft__item_action\">\n                        <span onClick={() => navigateTo(`${nft.bid_link}/${nft.id}`)}>Place a bid</span>\n                    </div>\n                    <div className=\"nft__item_like\">\n                        <i className=\"fa fa-heart\"></i><span>{nft.likes}</span>\n                    </div>                            \n                </div> \n            </div>\n        </div>            \n    );\n};\n\nexport default memo(NftMusicCard);","/home/dell/Documents/Market/src/components/components/UserTopSeller.js",[],"/home/dell/Documents/Market/src/components/components/CustomSlide.js",[],"/home/dell/Documents/Market/src/components/menu/AccountModal/networks.js",[],"/home/dell/Documents/Market/src/components/components/constants/filters.js",[],"/home/dell/Documents/Market/src/store/reducers/hotCollections.js",[],"/home/dell/Documents/Market/src/store/reducers/nfts.js",[],"/home/dell/Documents/Market/src/store/reducers/accountState.js",["373","374"],"import { getType } from \"typesafe-actions\";\nimport * as actions from \"../actions\";\nimport {\n  ACCOUNT_UPDATE,\n  WEB3_LOADED,\n  ACCOUNT_UPDATE_ON_DISCONNECT,\n  TOKEN_UPDATE,\n  EXPLORE_SALE_TYPE_UPDATE,\n  NFT_LIST_PARAMS_UPDATE,\n  PROFILE_DATA_LOADED,\n  AUTHOR_DATA_LOADED,\n} from \"../constants/action-types\";\n\nconst initialState = {\n  account: null,\n  web3: null,\n};\n\nexport const defaultState = {\n  accountState: initialState,\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACCOUNT_UPDATE:\n      return Object.assign({}, state, {\n        account: action.payload,\n      });\n    case WEB3_LOADED:\n      return Object.assign({}, state, {\n        web3: action.payload,\n      });\n    case ACCOUNT_UPDATE_ON_DISCONNECT:\n      return Object.assign({}, state, {\n        account: null,\n      });\n    case TOKEN_UPDATE:\n      return Object.assign({}, state, {\n        token: action.payload,\n      });\n    case EXPLORE_SALE_TYPE_UPDATE:\n      return Object.assign({}, state, {\n        exploreSaleType: action.payload,\n      });\n    case NFT_LIST_PARAMS_UPDATE:\n      return Object.assign({}, state, {\n        paramType: action.payload,\n      });\n    case PROFILE_DATA_LOADED:\n      return Object.assign({}, state, {\n        profileData: action.payload,\n      });\n    case AUTHOR_DATA_LOADED:\n      return Object.assign({}, state, {\n        authorData: action.payload,\n      });\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default states;\n","/home/dell/Documents/Market/src/store/reducers/blogs.js",[],"/home/dell/Documents/Market/src/store/reducers/filters.js",[],"/home/dell/Documents/Market/src/store/reducers/authorList.js",[],"/home/dell/Documents/Market/src/components/menu/AccountModal/popupModal.jsx",[],"/home/dell/Documents/Market/src/store/actions/index.js",[],"/home/dell/Documents/Market/src/components/components/constants/index.js",[],"/home/dell/Documents/Market/src/store/actions/thunks/blogs.js",[],"/home/dell/Documents/Market/src/store/actions/thunks/contactUs.js",[],"/home/dell/Documents/Market/src/store/actions/thunks/hotCollections.js",[],"/home/dell/Documents/Market/src/store/actions/thunks/authorList.js",[],"/home/dell/Documents/Market/src/store/actions/thunks/nfts.js",[],"/home/dell/Documents/Market/src/redux/actions/index.js",[],"/home/dell/Documents/Market/src/store/constants/action-types.js",[],"/home/dell/Documents/Market/src/core/axios.js",[],"/home/dell/Documents/Market/src/redux/constants/action-types.js",[],"/home/dell/Documents/Market/src/components/pages/ItemDetail.js",[],{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","severity":1,"message":"380","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":21},{"ruleId":"379","severity":1,"message":"383","line":24,"column":10,"nodeType":"381","messageId":"382","endLine":24,"endColumn":15},{"ruleId":"379","severity":1,"message":"384","line":25,"column":10,"nodeType":"381","messageId":"382","endLine":25,"endColumn":19},{"ruleId":"379","severity":1,"message":"385","line":25,"column":21,"nodeType":"381","messageId":"382","endLine":25,"endColumn":33},{"ruleId":"379","severity":1,"message":"386","line":26,"column":9,"nodeType":"381","messageId":"382","endLine":26,"endColumn":18},{"ruleId":"379","severity":1,"message":"387","line":22,"column":10,"nodeType":"381","messageId":"382","endLine":22,"endColumn":17},{"ruleId":"379","severity":1,"message":"388","line":25,"column":3,"nodeType":"381","messageId":"382","endLine":25,"endColumn":11},{"ruleId":"379","severity":1,"message":"389","line":85,"column":10,"nodeType":"381","messageId":"382","endLine":85,"endColumn":15},{"ruleId":"379","severity":1,"message":"390","line":85,"column":17,"nodeType":"381","messageId":"382","endLine":85,"endColumn":25},{"ruleId":"379","severity":1,"message":"391","line":86,"column":10,"nodeType":"381","messageId":"382","endLine":86,"endColumn":21},{"ruleId":"379","severity":1,"message":"392","line":87,"column":9,"nodeType":"381","messageId":"382","endLine":87,"endColumn":16},{"ruleId":"379","severity":1,"message":"393","line":108,"column":20,"nodeType":"381","messageId":"382","endLine":108,"endColumn":31},{"ruleId":"379","severity":1,"message":"394","line":109,"column":24,"nodeType":"381","messageId":"382","endLine":109,"endColumn":39},{"ruleId":"379","severity":1,"message":"395","line":110,"column":10,"nodeType":"381","messageId":"382","endLine":110,"endColumn":25},{"ruleId":"379","severity":1,"message":"396","line":110,"column":27,"nodeType":"381","messageId":"382","endLine":110,"endColumn":45},{"ruleId":"379","severity":1,"message":"397","line":111,"column":26,"nodeType":"381","messageId":"382","endLine":111,"endColumn":43},{"ruleId":"379","severity":1,"message":"398","line":112,"column":10,"nodeType":"381","messageId":"382","endLine":112,"endColumn":27},{"ruleId":"379","severity":1,"message":"399","line":112,"column":29,"nodeType":"381","messageId":"382","endLine":112,"endColumn":49},{"ruleId":"379","severity":1,"message":"400","line":115,"column":20,"nodeType":"381","messageId":"382","endLine":115,"endColumn":31},{"ruleId":"379","severity":1,"message":"401","line":116,"column":20,"nodeType":"381","messageId":"382","endLine":116,"endColumn":31},{"ruleId":"379","severity":1,"message":"402","line":117,"column":20,"nodeType":"381","messageId":"382","endLine":117,"endColumn":31},{"ruleId":"379","severity":1,"message":"403","line":118,"column":16,"nodeType":"381","messageId":"382","endLine":118,"endColumn":23},{"ruleId":"379","severity":1,"message":"404","line":119,"column":32,"nodeType":"381","messageId":"382","endLine":119,"endColumn":55},{"ruleId":"379","severity":1,"message":"405","line":120,"column":19,"nodeType":"381","messageId":"382","endLine":120,"endColumn":29},{"ruleId":"379","severity":1,"message":"406","line":121,"column":25,"nodeType":"381","messageId":"382","endLine":121,"endColumn":41},{"ruleId":"379","severity":1,"message":"407","line":122,"column":19,"nodeType":"381","messageId":"382","endLine":122,"endColumn":29},{"ruleId":"379","severity":1,"message":"408","line":132,"column":9,"nodeType":"381","messageId":"382","endLine":132,"endColumn":19},{"ruleId":"379","severity":1,"message":"409","line":136,"column":9,"nodeType":"381","messageId":"382","endLine":136,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":140,"column":15,"nodeType":"412","messageId":"413","endLine":140,"endColumn":17},{"ruleId":"379","severity":1,"message":"414","line":154,"column":9,"nodeType":"381","messageId":"382","endLine":154,"endColumn":22},{"ruleId":"379","severity":1,"message":"415","line":193,"column":9,"nodeType":"381","messageId":"382","endLine":193,"endColumn":21},{"ruleId":"379","severity":1,"message":"416","line":242,"column":12,"nodeType":"381","messageId":"382","endLine":242,"endColumn":24},{"ruleId":"379","severity":1,"message":"417","line":290,"column":9,"nodeType":"381","messageId":"382","endLine":290,"endColumn":26},{"ruleId":"379","severity":1,"message":"418","line":596,"column":13,"nodeType":"381","messageId":"382","endLine":596,"endColumn":20},{"ruleId":"419","severity":1,"message":"420","line":677,"column":31,"nodeType":"421","messageId":"413","endLine":677,"endColumn":36},{"ruleId":"422","severity":1,"message":"423","line":722,"column":19,"nodeType":"424","endLine":722,"endColumn":81},{"ruleId":"410","severity":1,"message":"411","line":1156,"column":26,"nodeType":"412","messageId":"413","endLine":1156,"endColumn":28},{"ruleId":"410","severity":1,"message":"411","line":1162,"column":24,"nodeType":"412","messageId":"413","endLine":1162,"endColumn":26},{"ruleId":"379","severity":1,"message":"387","line":22,"column":10,"nodeType":"381","messageId":"382","endLine":22,"endColumn":17},{"ruleId":"379","severity":1,"message":"388","line":25,"column":3,"nodeType":"381","messageId":"382","endLine":25,"endColumn":11},{"ruleId":"379","severity":1,"message":"389","line":85,"column":10,"nodeType":"381","messageId":"382","endLine":85,"endColumn":15},{"ruleId":"379","severity":1,"message":"390","line":85,"column":17,"nodeType":"381","messageId":"382","endLine":85,"endColumn":25},{"ruleId":"379","severity":1,"message":"391","line":86,"column":10,"nodeType":"381","messageId":"382","endLine":86,"endColumn":21},{"ruleId":"379","severity":1,"message":"392","line":87,"column":9,"nodeType":"381","messageId":"382","endLine":87,"endColumn":16},{"ruleId":"379","severity":1,"message":"393","line":108,"column":20,"nodeType":"381","messageId":"382","endLine":108,"endColumn":31},{"ruleId":"379","severity":1,"message":"394","line":109,"column":24,"nodeType":"381","messageId":"382","endLine":109,"endColumn":39},{"ruleId":"379","severity":1,"message":"395","line":110,"column":10,"nodeType":"381","messageId":"382","endLine":110,"endColumn":25},{"ruleId":"379","severity":1,"message":"396","line":110,"column":27,"nodeType":"381","messageId":"382","endLine":110,"endColumn":45},{"ruleId":"379","severity":1,"message":"397","line":111,"column":26,"nodeType":"381","messageId":"382","endLine":111,"endColumn":43},{"ruleId":"379","severity":1,"message":"398","line":112,"column":10,"nodeType":"381","messageId":"382","endLine":112,"endColumn":27},{"ruleId":"379","severity":1,"message":"399","line":112,"column":29,"nodeType":"381","messageId":"382","endLine":112,"endColumn":49},{"ruleId":"379","severity":1,"message":"400","line":115,"column":20,"nodeType":"381","messageId":"382","endLine":115,"endColumn":31},{"ruleId":"379","severity":1,"message":"401","line":116,"column":20,"nodeType":"381","messageId":"382","endLine":116,"endColumn":31},{"ruleId":"379","severity":1,"message":"402","line":117,"column":20,"nodeType":"381","messageId":"382","endLine":117,"endColumn":31},{"ruleId":"379","severity":1,"message":"403","line":118,"column":16,"nodeType":"381","messageId":"382","endLine":118,"endColumn":23},{"ruleId":"379","severity":1,"message":"404","line":119,"column":32,"nodeType":"381","messageId":"382","endLine":119,"endColumn":55},{"ruleId":"379","severity":1,"message":"405","line":120,"column":19,"nodeType":"381","messageId":"382","endLine":120,"endColumn":29},{"ruleId":"379","severity":1,"message":"406","line":121,"column":25,"nodeType":"381","messageId":"382","endLine":121,"endColumn":41},{"ruleId":"379","severity":1,"message":"407","line":122,"column":19,"nodeType":"381","messageId":"382","endLine":122,"endColumn":29},{"ruleId":"379","severity":1,"message":"408","line":132,"column":9,"nodeType":"381","messageId":"382","endLine":132,"endColumn":19},{"ruleId":"379","severity":1,"message":"409","line":136,"column":9,"nodeType":"381","messageId":"382","endLine":136,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":140,"column":15,"nodeType":"412","messageId":"413","endLine":140,"endColumn":17},{"ruleId":"379","severity":1,"message":"414","line":154,"column":9,"nodeType":"381","messageId":"382","endLine":154,"endColumn":22},{"ruleId":"379","severity":1,"message":"415","line":193,"column":9,"nodeType":"381","messageId":"382","endLine":193,"endColumn":21},{"ruleId":"379","severity":1,"message":"416","line":242,"column":12,"nodeType":"381","messageId":"382","endLine":242,"endColumn":24},{"ruleId":"379","severity":1,"message":"417","line":290,"column":9,"nodeType":"381","messageId":"382","endLine":290,"endColumn":26},{"ruleId":"379","severity":1,"message":"418","line":596,"column":13,"nodeType":"381","messageId":"382","endLine":596,"endColumn":20},{"ruleId":"419","severity":1,"message":"420","line":677,"column":31,"nodeType":"421","messageId":"413","endLine":677,"endColumn":36},{"ruleId":"422","severity":1,"message":"423","line":722,"column":19,"nodeType":"424","endLine":722,"endColumn":81},{"ruleId":"410","severity":1,"message":"411","line":1122,"column":26,"nodeType":"412","messageId":"413","endLine":1122,"endColumn":28},{"ruleId":"410","severity":1,"message":"411","line":1128,"column":24,"nodeType":"412","messageId":"413","endLine":1128,"endColumn":26},{"ruleId":"379","severity":1,"message":"425","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":14},{"ruleId":"379","severity":1,"message":"426","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":15},{"ruleId":"379","severity":1,"message":"427","line":2,"column":17,"nodeType":"381","messageId":"382","endLine":2,"endColumn":21},{"ruleId":"379","severity":1,"message":"428","line":2,"column":40,"nodeType":"381","messageId":"382","endLine":2,"endColumn":46},{"ruleId":"379","severity":1,"message":"429","line":2,"column":3,"nodeType":"381","messageId":"382","endLine":2,"endColumn":17},{"ruleId":"379","severity":1,"message":"430","line":3,"column":3,"nodeType":"381","messageId":"382","endLine":3,"endColumn":26},{"ruleId":"379","severity":1,"message":"431","line":4,"column":3,"nodeType":"381","messageId":"382","endLine":4,"endColumn":24},{"ruleId":"379","severity":1,"message":"432","line":5,"column":3,"nodeType":"381","messageId":"382","endLine":5,"endColumn":23},{"ruleId":"379","severity":1,"message":"433","line":6,"column":3,"nodeType":"381","messageId":"382","endLine":6,"endColumn":16},{"ruleId":"379","severity":1,"message":"434","line":7,"column":3,"nodeType":"381","messageId":"382","endLine":7,"endColumn":15},{"ruleId":"379","severity":1,"message":"435","line":8,"column":3,"nodeType":"381","messageId":"382","endLine":8,"endColumn":17},{"ruleId":"379","severity":1,"message":"436","line":9,"column":3,"nodeType":"381","messageId":"382","endLine":9,"endColumn":16},{"ruleId":"379","severity":1,"message":"437","line":10,"column":3,"nodeType":"381","messageId":"382","endLine":10,"endColumn":18},{"ruleId":"379","severity":1,"message":"438","line":1,"column":10,"nodeType":"381","messageId":"382","endLine":1,"endColumn":19},{"ruleId":"379","severity":1,"message":"439","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":16},{"ruleId":"379","severity":1,"message":"440","line":6,"column":8,"nodeType":"381","messageId":"382","endLine":6,"endColumn":22},{"ruleId":"379","severity":1,"message":"437","line":12,"column":3,"nodeType":"381","messageId":"382","endLine":12,"endColumn":18},{"ruleId":"379","severity":1,"message":"441","line":13,"column":3,"nodeType":"381","messageId":"382","endLine":13,"endColumn":20},{"ruleId":"379","severity":1,"message":"442","line":14,"column":3,"nodeType":"381","messageId":"382","endLine":14,"endColumn":14},{"ruleId":"379","severity":1,"message":"443","line":15,"column":3,"nodeType":"381","messageId":"382","endLine":15,"endColumn":16},{"ruleId":"379","severity":1,"message":"444","line":20,"column":10,"nodeType":"381","messageId":"382","endLine":20,"endColumn":29},{"ruleId":"379","severity":1,"message":"445","line":21,"column":8,"nodeType":"381","messageId":"382","endLine":21,"endColumn":18},{"ruleId":"379","severity":1,"message":"446","line":22,"column":10,"nodeType":"381","messageId":"382","endLine":22,"endColumn":25},{"ruleId":"379","severity":1,"message":"447","line":478,"column":9,"nodeType":"381","messageId":"382","endLine":478,"endColumn":28},{"ruleId":"379","severity":1,"message":"448","line":483,"column":9,"nodeType":"381","messageId":"382","endLine":483,"endColumn":20},{"ruleId":"449","severity":1,"message":"450","line":32,"column":11,"nodeType":"451","endLine":32,"endColumn":20,"suggestions":"452"},{"ruleId":"449","severity":1,"message":"450","line":41,"column":12,"nodeType":"451","endLine":41,"endColumn":14,"suggestions":"453"},{"ruleId":"379","severity":1,"message":"454","line":1,"column":10,"nodeType":"381","messageId":"382","endLine":1,"endColumn":17},{"ruleId":"379","severity":1,"message":"455","line":2,"column":13,"nodeType":"381","messageId":"382","endLine":2,"endColumn":20},"no-native-reassign",["456"],"no-negated-in-lhs",["457"],"no-unused-vars","'memo' is defined but never used.","Identifier","unusedVar","'items' is assigned a value but never used.","'likeEvent' is assigned a value but never used.","'setLikeEvent' is assigned a value but never used.","'onImgLoad' is assigned a value but never used.","'options' is defined but never used.","'CURRENCY' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'showResults' is assigned a value but never used.","'onClick' is assigned a value but never used.","'setNftImage' is assigned a value but never used.","'setPropertyKeys' is assigned a value but never used.","'currPropertyKey' is assigned a value but never used.","'setCurrPropertyKey' is assigned a value but never used.","'setPropertyValues' is assigned a value but never used.","'currPropertyValue' is assigned a value but never used.","'setCurrPropertyValue' is assigned a value but never used.","'setNftTitle' is assigned a value but never used.","'setSaleType' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setSalt' is assigned a value but never used.","'setSelectedTokenAddress' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","'setLockedContent' is assigned a value but never used.","'setNftDesc' is assigned a value but never used.","'changeName' is assigned a value but never used.","'changeTitle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'transferValue' is assigned a value but never used.","'handleRemove' is assigned a value but never used.","'handleChange' is defined but never used.","'handleNftCreation' is assigned a value but never used.","'profile' is assigned a value but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'exportInstance' is defined but never used.","'GetCollectionsByAddress' is defined but never used.","'GetCollectionsNftList' is defined but never used.","'GetMyCollectionsList' is defined but never used.","'GetMyLikedNft' is defined but never used.","'GetMyNftList' is defined but never used.","'GetMyOnSaleNft' is defined but never used.","'GetNftDetails' is defined but never used.","'getOrderDetails' is defined but never used.","'BigNumber' is defined but never used.","'ethers' is defined but never used.","'marketPlaceABI' is defined but never used.","'UpdateOrderStatus' is defined but never used.","'DeleteOrder' is defined but never used.","'InsertHistory' is defined but never used.","'NotificationManager' is defined but never used.","'PopupModal' is defined but never used.","'BsExclamationLg' is defined but never used.","'handleNetworkSwitch' is assigned a value but never used.","'togglePopup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.","ArrayExpression",["458"],["459"],"'getType' is defined but never used.","'actions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},"Update the dependencies array to be: [audio, playing]",{"range":"464","text":"465"},"Update the dependencies array to be: [audio]",{"range":"466","text":"467"},[937,946],"[audio, playing]",[1208,1210],"[audio]"]