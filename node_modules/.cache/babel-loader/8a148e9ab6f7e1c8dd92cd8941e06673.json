{"ast":null,"code":"import { isEmpty } from 'lodash';\nconst TOKEN_KEY = 'jwtToken';\nconst USER_INFO = 'userInfo';\nconst parse = JSON.parse;\nconst stringify = JSON.stringify;\nconst auth = {\n  /**\n   * Remove an item from the used storage\n   * @param  {String} key [description]\n   */\n  clear(key) {\n    if (localStorage && localStorage.getItem(key)) {\n      return localStorage.removeItem(key);\n    }\n    if (sessionStorage && sessionStorage.getItem(key)) {\n      return sessionStorage.removeItem(key);\n    }\n    return null;\n  },\n  /**\n   * Clear all app storage\n   */\n  clearAppStorage() {\n    if (localStorage) {\n      localStorage.clear();\n    }\n    if (sessionStorage) {\n      sessionStorage.clear();\n    }\n  },\n  clearToken() {\n    let tokenKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TOKEN_KEY;\n    return auth.clear(tokenKey);\n  },\n  clearUserInfo() {\n    let userInfo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : USER_INFO;\n    return auth.clear(userInfo);\n  },\n  /**\n   * Returns data from storage\n   * @param  {String} key Item to get from the storage\n   * @return {String|Object}     Data from the storage\n   */\n  get(key) {\n    if (localStorage && localStorage.getItem(key)) {\n      return parse(localStorage.getItem(key)) || null;\n    }\n    if (sessionStorage && sessionStorage.getItem(key)) {\n      return parse(sessionStorage.getItem(key)) || null;\n    }\n    return null;\n  },\n  getToken() {\n    let tokenKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TOKEN_KEY;\n    return auth.get(tokenKey);\n  },\n  getUserInfo() {\n    let userInfo = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : USER_INFO;\n    return auth.get(userInfo);\n  },\n  /**\n   * Set data in storage\n   * @param {String|Object}  value    The data to store\n   * @param {String}  key\n   * @param {Boolean} isLocalStorage  Defines if we need to store in localStorage or sessionStorage\n   */\n  set(value, key, isLocalStorage) {\n    if (isEmpty(value)) {\n      return null;\n    }\n    if (isLocalStorage && localStorage) {\n      return localStorage.setItem(key, stringify(value));\n    }\n    if (sessionStorage) {\n      return sessionStorage.setItem(key, stringify(value));\n    }\n    return null;\n  },\n  setToken() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isLocalStorage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let tokenKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TOKEN_KEY;\n    return auth.set(value, tokenKey, isLocalStorage);\n  },\n  setUserInfo() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isLocalStorage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let userInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : USER_INFO;\n    return auth.set(value, userInfo, isLocalStorage);\n  }\n};\nexport const loginUrl = 'http://localhost:1337/auth/local';\nexport const registerUrl = 'http://localhost:1337/auth/local/register';\nexport const authorUrl = authorId => `http://localhost:1337/authors/${authorId}`;\nexport default auth;","map":{"version":3,"names":["isEmpty","TOKEN_KEY","USER_INFO","parse","JSON","stringify","auth","clear","key","localStorage","getItem","removeItem","sessionStorage","clearAppStorage","clearToken","tokenKey","clearUserInfo","userInfo","get","getToken","getUserInfo","set","value","isLocalStorage","setItem","setToken","setUserInfo","loginUrl","registerUrl","authorUrl","authorId"],"sources":["/home/dell/Documents/Market/src/core/auth/index.js"],"sourcesContent":["import { isEmpty } from 'lodash';\n\nconst TOKEN_KEY = 'jwtToken';\nconst USER_INFO = 'userInfo';\n\nconst parse = JSON.parse;\nconst stringify = JSON.stringify;\n\nconst auth = {\n  /**\n   * Remove an item from the used storage\n   * @param  {String} key [description]\n   */\n  clear(key) {\n    if (localStorage && localStorage.getItem(key)) {\n      return localStorage.removeItem(key);\n    }\n\n    if (sessionStorage && sessionStorage.getItem(key)) {\n      return sessionStorage.removeItem(key);\n    }\n\n    return null;\n  },\n\n  /**\n   * Clear all app storage\n   */\n  clearAppStorage() {\n    if (localStorage) {\n      localStorage.clear();\n    }\n\n    if (sessionStorage) {\n      sessionStorage.clear();\n    }\n  },\n\n  clearToken(tokenKey = TOKEN_KEY) {\n    return auth.clear(tokenKey);\n  },\n\n  clearUserInfo(userInfo = USER_INFO) {\n    return auth.clear(userInfo);\n  },\n\n  /**\n   * Returns data from storage\n   * @param  {String} key Item to get from the storage\n   * @return {String|Object}     Data from the storage\n   */\n  get(key) {\n    if (localStorage && localStorage.getItem(key)) {\n      return parse(localStorage.getItem(key)) || null;\n    }\n\n    if (sessionStorage && sessionStorage.getItem(key)) {\n      return parse(sessionStorage.getItem(key)) || null;\n    }\n\n    return null;\n  },\n\n  getToken(tokenKey = TOKEN_KEY) {\n    return auth.get(tokenKey);\n  },\n\n  getUserInfo(userInfo = USER_INFO) {\n    return auth.get(userInfo);\n  },\n\n  /**\n   * Set data in storage\n   * @param {String|Object}  value    The data to store\n   * @param {String}  key\n   * @param {Boolean} isLocalStorage  Defines if we need to store in localStorage or sessionStorage\n   */\n  set(value, key, isLocalStorage) {\n    if (isEmpty(value)) {\n      return null;\n    }\n\n    if (isLocalStorage && localStorage) {\n      return localStorage.setItem(key, stringify(value));\n    }\n\n    if (sessionStorage) {\n      return sessionStorage.setItem(key, stringify(value));\n    }\n\n    return null;\n  },\n\n  setToken(value = '', isLocalStorage = false, tokenKey = TOKEN_KEY) {\n    return auth.set(value, tokenKey, isLocalStorage);\n  },\n\n  setUserInfo(value = '', isLocalStorage = false, userInfo = USER_INFO) {\n    return auth.set(value, userInfo, isLocalStorage);\n  },\n};\n\nexport const loginUrl = 'http://localhost:1337/auth/local';\nexport const registerUrl = 'http://localhost:1337/auth/local/register';\nexport const authorUrl = (authorId) => `http://localhost:1337/authors/${authorId}`;\n\nexport default auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}