{"ast":null,"code":"import 'whatwg-fetch';\nimport auth from './index';\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  return response.json ? response.json() : response;\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  return parseJSON(response).then(responseFormatted => {\n    const error = new Error(response.statusText);\n    error.response = response;\n    error.response.payload = responseFormatted;\n    throw error;\n  });\n}\n\n/**\n * Format query params\n *\n * @param params\n * @returns {string}\n */\nfunction formatQueryParams(params) {\n  return Object.keys(params).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&');\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // Set headers\n  if (stringify) {\n    options.headers = Object.assign({\n      'Content-Type': 'application/json'\n    }, options.headers, {});\n  }\n  const token = auth.getToken();\n  if (token) {\n    options.headers = Object.assign({\n      Authorization: `Bearer ${token}`\n    }, options.headers);\n  }\n  if (options && options.params) {\n    const params = formatQueryParams(options.params);\n    url = `${url}?${params}`;\n  }\n\n  // Stringify body object\n  if (options && options.body && stringify) {\n    options.body = JSON.stringify(options.body);\n  }\n  return fetch(url, options).then(checkStatus).then(parseJSON);\n}","map":{"version":3,"names":["auth","parseJSON","response","json","checkStatus","status","then","responseFormatted","error","Error","statusText","payload","formatQueryParams","params","Object","keys","map","k","encodeURIComponent","join","request","url","options","stringify","headers","assign","token","getToken","Authorization","body","JSON","fetch"],"sources":["/home/dell/Documents/Market/src/core/auth/request.js"],"sourcesContent":["import 'whatwg-fetch';\nimport auth from './index';\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  return response.json ? response.json() : response;\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  return parseJSON(response).then(responseFormatted => {\n    const error = new Error(response.statusText);\n    error.response = response;\n    error.response.payload = responseFormatted;\n    throw error;\n  });\n}\n\n/**\n * Format query params\n *\n * @param params\n * @returns {string}\n */\nfunction formatQueryParams(params) {\n  return Object.keys(params)\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n    .join('&');\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(\n  url,\n  options = {},\n  stringify = true\n) {\n  // Set headers\n  if (stringify) {\n\n    options.headers = Object.assign(\n      {\n        'Content-Type': 'application/json',\n      },\n      options.headers,\n      {}\n    );\n  }\n\n  const token = auth.getToken();\n\n  if (token) {\n    options.headers = Object.assign(\n      {\n        Authorization: `Bearer ${token}`,\n      },\n      options.headers\n    );\n  }\n\n  if (options && options.params) {\n    const params = formatQueryParams(options.params);\n    url = `${url}?${params}`;\n  }\n\n  // Stringify body object\n  if (options && options.body && stringify) {\n    options.body = JSON.stringify(options.body);\n  }\n\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}"],"mappings":"AAAA,OAAO,cAAc;AACrB,OAAOA,IAAI,MAAM,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,CAACC,QAAQ,EAAE;EAC3B,OAAOA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAACC,IAAI,EAAE,GAAGD,QAAQ;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,WAAW,CAACF,QAAQ,EAAE;EAC7B,IAAIA,QAAQ,CAACG,MAAM,IAAI,GAAG,IAAIH,QAAQ,CAACG,MAAM,GAAG,GAAG,EAAE;IACnD,OAAOH,QAAQ;EACjB;EAEA,OAAOD,SAAS,CAACC,QAAQ,CAAC,CAACI,IAAI,CAACC,iBAAiB,IAAI;IACnD,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACP,QAAQ,CAACQ,UAAU,CAAC;IAC5CF,KAAK,CAACN,QAAQ,GAAGA,QAAQ;IACzBM,KAAK,CAACN,QAAQ,CAACS,OAAO,GAAGJ,iBAAiB;IAC1C,MAAMC,KAAK;EACb,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,iBAAiB,CAACC,MAAM,EAAE;EACjC,OAAOC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CACvBG,GAAG,CAACC,CAAC,IAAK,GAAEC,kBAAkB,CAACD,CAAC,CAAE,IAAGC,kBAAkB,CAACL,MAAM,CAACI,CAAC,CAAC,CAAE,EAAC,CAAC,CACrEE,IAAI,CAAC,GAAG,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAO,CAC7BC,GAAG,EAGH;EAAA,IAFAC,OAAO,uEAAG,CAAC,CAAC;EAAA,IACZC,SAAS,uEAAG,IAAI;EAEhB;EACA,IAAIA,SAAS,EAAE;IAEbD,OAAO,CAACE,OAAO,GAAGV,MAAM,CAACW,MAAM,CAC7B;MACE,cAAc,EAAE;IAClB,CAAC,EACDH,OAAO,CAACE,OAAO,EACf,CAAC,CAAC,CACH;EACH;EAEA,MAAME,KAAK,GAAG1B,IAAI,CAAC2B,QAAQ,EAAE;EAE7B,IAAID,KAAK,EAAE;IACTJ,OAAO,CAACE,OAAO,GAAGV,MAAM,CAACW,MAAM,CAC7B;MACEG,aAAa,EAAG,UAASF,KAAM;IACjC,CAAC,EACDJ,OAAO,CAACE,OAAO,CAChB;EACH;EAEA,IAAIF,OAAO,IAAIA,OAAO,CAACT,MAAM,EAAE;IAC7B,MAAMA,MAAM,GAAGD,iBAAiB,CAACU,OAAO,CAACT,MAAM,CAAC;IAChDQ,GAAG,GAAI,GAAEA,GAAI,IAAGR,MAAO,EAAC;EAC1B;;EAEA;EACA,IAAIS,OAAO,IAAIA,OAAO,CAACO,IAAI,IAAIN,SAAS,EAAE;IACxCD,OAAO,CAACO,IAAI,GAAGC,IAAI,CAACP,SAAS,CAACD,OAAO,CAACO,IAAI,CAAC;EAC7C;EAEA,OAAOE,KAAK,CAACV,GAAG,EAAEC,OAAO,CAAC,CACvBhB,IAAI,CAACF,WAAW,CAAC,CACjBE,IAAI,CAACL,SAAS,CAAC;AACpB"},"metadata":{},"sourceType":"module"}