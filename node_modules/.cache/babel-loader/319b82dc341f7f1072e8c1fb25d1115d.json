{"ast":null,"code":"import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\nexport const getBlogPosts = postId => async dispatch => {\n  dispatch(actions.getBlogPosts.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.blogs}${postId ? '/single.json' : '/all.json'}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getBlogPosts.success(data));\n  } catch (err) {\n    dispatch(actions.getBlogPosts.failure(err));\n  }\n};\nexport const getBlogComments = postId => async dispatch => {\n  dispatch(actions.getComments.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.comments}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getComments.success(data));\n  } catch (err) {\n    dispatch(actions.getComments.failure(err));\n  }\n};\nexport const getBlogTags = postId => async dispatch => {\n  dispatch(actions.getTags.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.tags}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getTags.success(data));\n  } catch (err) {\n    dispatch(actions.getTags.failure(err));\n  }\n};\nexport const getRecentPosts = () => async dispatch => {\n  dispatch(actions.getRecentPosts.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.recent}`, {\n      cancelToken: Canceler.token\n    });\n    dispatch(actions.getRecentPosts.success(data));\n  } catch (err) {\n    dispatch(actions.getRecentPosts.failure(err));\n  }\n};","map":{"version":3,"names":["Axios","Canceler","actions","api","getBlogPosts","postId","dispatch","request","cancel","data","get","baseUrl","blogs","cancelToken","token","params","success","err","failure","getBlogComments","getComments","comments","getBlogTags","getTags","tags","getRecentPosts","recent"],"sources":["/home/dell/Documents/Market/src/store/actions/thunks/blogs.js"],"sourcesContent":["import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\n\nexport const getBlogPosts = (postId) => async (dispatch) => {\n\n  dispatch(actions.getBlogPosts.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.blogs}${postId ? '/single.json' : '/all.json'}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getBlogPosts.success(data));\n  } catch (err) {\n    dispatch(actions.getBlogPosts.failure(err));\n  }\n};\n\nexport const getBlogComments = (postId) => async (dispatch) => {\n\n  dispatch(actions.getComments.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.comments}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getComments.success(data));\n  } catch (err) {\n    dispatch(actions.getComments.failure(err));\n  }\n};\n\nexport const getBlogTags = (postId) => async (dispatch) => {\n\n  dispatch(actions.getTags.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.tags}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getTags.success(data));\n  } catch (err) {\n    dispatch(actions.getTags.failure(err));\n  }\n};\n\nexport const getRecentPosts = () => async (dispatch) => {\n\n  dispatch(actions.getRecentPosts.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.recent}`, {\n      cancelToken: Canceler.token\n    });\n\n    dispatch(actions.getRecentPosts.success(data));\n  } catch (err) {\n    dispatch(actions.getRecentPosts.failure(err));\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}