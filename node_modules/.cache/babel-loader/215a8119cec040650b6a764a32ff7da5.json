{"ast":null,"code":"import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\nexport const fetchAuthorList = authorId => async dispatch => {\n  dispatch(actions.getAuthorList.request(Canceler.cancel));\n  try {\n    let filter = authorId ? 'id=' + authorId : '';\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.authors}?${filter}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getAuthorList.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorList.failure(err));\n  }\n};\nexport const fetchAuthorRanking = () => async dispatch => {\n  dispatch(actions.getAuthorRanking.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.authorsSales}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getAuthorRanking.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorRanking.failure(err));\n  }\n};","map":{"version":3,"names":["Axios","Canceler","actions","api","fetchAuthorList","authorId","dispatch","getAuthorList","request","cancel","filter","data","get","baseUrl","authors","cancelToken","token","params","success","err","failure","fetchAuthorRanking","getAuthorRanking","authorsSales"],"sources":["/home/dell/Documents/Market/src/store/actions/thunks/authorList.js"],"sourcesContent":["import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\n\nexport const fetchAuthorList = (authorId) => async (dispatch) => {\n\n  dispatch(actions.getAuthorList.request(Canceler.cancel));\n\n  try {\n    let filter = authorId ? 'id='+authorId : '';\n    const { data } = await Axios.get(`${api.baseUrl}${api.authors}?${filter}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getAuthorList.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorList.failure(err));\n  }\n};\n\nexport const fetchAuthorRanking = () => async (dispatch) => {\n\n  dispatch(actions.getAuthorRanking.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.authorsSales}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getAuthorRanking.success(data));\n  } catch (err) {\n    dispatch(actions.getAuthorRanking.failure(err));\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,qBAAqB;AACrD,OAAO,KAAKC,OAAO,MAAM,eAAe;AACxC,OAAOC,GAAG,MAAM,mBAAmB;AAEnC,OAAO,MAAMC,eAAe,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAE/DA,QAAQ,CAACJ,OAAO,CAACK,aAAa,CAACC,OAAO,CAACP,QAAQ,CAACQ,MAAM,CAAC,CAAC;EAExD,IAAI;IACF,IAAIC,MAAM,GAAGL,QAAQ,GAAG,KAAK,GAACA,QAAQ,GAAG,EAAE;IAC3C,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAET,GAAG,CAACU,OAAQ,GAAEV,GAAG,CAACW,OAAQ,IAAGJ,MAAO,EAAC,EAAE;MACzEK,WAAW,EAAEd,QAAQ,CAACe,KAAK;MAC3BC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IAEFX,QAAQ,CAACJ,OAAO,CAACK,aAAa,CAACW,OAAO,CAACP,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZb,QAAQ,CAACJ,OAAO,CAACK,aAAa,CAACa,OAAO,CAACD,GAAG,CAAC,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAG,MAAM,MAAOf,QAAQ,IAAK;EAE1DA,QAAQ,CAACJ,OAAO,CAACoB,gBAAgB,CAACd,OAAO,CAACP,QAAQ,CAACQ,MAAM,CAAC,CAAC;EAE3D,IAAI;IACF,MAAM;MAAEE;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAET,GAAG,CAACU,OAAQ,GAAEV,GAAG,CAACoB,YAAa,EAAC,EAAE;MACpER,WAAW,EAAEd,QAAQ,CAACe,KAAK;MAC3BC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IAEFX,QAAQ,CAACJ,OAAO,CAACoB,gBAAgB,CAACJ,OAAO,CAACP,IAAI,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZb,QAAQ,CAACJ,OAAO,CAACoB,gBAAgB,CAACF,OAAO,CAACD,GAAG,CAAC,CAAC;EACjD;AACF,CAAC"},"metadata":{},"sourceType":"module"}