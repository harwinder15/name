{"ast":null,"code":"import { createSelector, createStructuredSelector } from \"reselect\";\n\n//Store Selectors\nexport const nftBreakdownState = state => state.NFT.nftBreakdown;\nexport const nftShowcaseState = state => state.NFT.nftShowcase;\nexport const nftDetailState = state => state.NFT.nftDetail;\nexport const hotCollectionsState = state => state.hotCollection.hotCollections;\nexport const authorsState = state => state.authors.authorList;\nexport const authorRankingsState = state => state.authors.authorRanking;\n\n//blogs\nexport const blogsState = state => state.blogs.blogPosts;\nexport const recentPostsState = state => state.blogs.recentPosts;\nexport const tagsState = state => state.blogs.tags;\nexport const commentsState = state => state.blogs.comments;\nexport const auctionedNfts = createSelector(nftBreakdownState, nfts => {\n  if (!nfts.data) {\n    return [];\n  }\n  const acutioned = nfts.data.filter(nft => !!nft.deadline);\n  return acutioned;\n});\nexport const nftFilter = createStructuredSelector({\n  categories: state => state.filters.selectedCategories,\n  status: state => state.filters.selectedStatus,\n  itemsType: state => state.filters.selectedItemsType,\n  collections: state => state.filters.selectedCollections,\n  nftTitle: state => state.filters.filterNftTitle\n});\nexport const nftItems = createSelector(nftFilter, nftBreakdownState, (filters, nfts) => {\n  let {\n    data\n  } = nfts;\n  const {\n    categories,\n    status,\n    itemsType,\n    collections,\n    nftTitle\n  } = filters;\n  if (!data) {\n    return [];\n  }\n  if (categories.size) {\n    data = data.filter(nft => categories.has(nft.category));\n  }\n  if (status.size) {\n    data = data.filter(nft => status.has(nft.status));\n  }\n  if (itemsType.size) {\n    data = data.filter(nft => itemsType.has(nft.item_type));\n  }\n  if (collections.size) {\n    data = data.filter(nft => collections.has(nft.collections));\n  }\n  if (nftTitle.trim().length) {\n    let pattern = new RegExp(`${nftTitle.trim()}`, 'gi');\n    console.log(pattern);\n    data = data.filter(nft => nft.title.match(pattern));\n  }\n  return data;\n});","map":{"version":3,"names":["createSelector","createStructuredSelector","nftBreakdownState","state","NFT","nftBreakdown","nftShowcaseState","nftShowcase","nftDetailState","nftDetail","hotCollectionsState","hotCollection","hotCollections","authorsState","authors","authorList","authorRankingsState","authorRanking","blogsState","blogs","blogPosts","recentPostsState","recentPosts","tagsState","tags","commentsState","comments","auctionedNfts","nfts","data","acutioned","filter","nft","deadline","nftFilter","categories","filters","selectedCategories","status","selectedStatus","itemsType","selectedItemsType","collections","selectedCollections","nftTitle","filterNftTitle","nftItems","size","has","category","item_type","trim","length","pattern","RegExp","console","log","title","match"],"sources":["/home/dell/Documents/Market/src/store/selectors/index.js"],"sourcesContent":["import { createSelector, createStructuredSelector } from \"reselect\";\n\n\n//Store Selectors\nexport const nftBreakdownState = (state) => state.NFT.nftBreakdown;\nexport const nftShowcaseState = (state) => state.NFT.nftShowcase;\nexport const nftDetailState = (state) => state.NFT.nftDetail;\nexport const hotCollectionsState = (state) => state.hotCollection.hotCollections;\nexport const authorsState = (state) => state.authors.authorList;\nexport const authorRankingsState = (state) => state.authors.authorRanking;\n\n//blogs\nexport const blogsState = (state) => state.blogs.blogPosts;\nexport const recentPostsState = (state) => state.blogs.recentPosts;\nexport const tagsState = (state) => state.blogs.tags;\nexport const commentsState = (state) => state.blogs.comments;\n\nexport const auctionedNfts = createSelector(nftBreakdownState, ( nfts ) => {\n    if(!nfts.data) {\n        return [];\n    }\n    const acutioned = nfts.data.filter(nft => !!nft.deadline);\n    return acutioned;\n});\n\nexport const nftFilter = createStructuredSelector({\n    categories: (state) => state.filters.selectedCategories,\n    status: (state) => state.filters.selectedStatus,\n    itemsType: (state) => state.filters.selectedItemsType,\n    collections: (state) => state.filters.selectedCollections,\n    nftTitle: (state) => state.filters.filterNftTitle\n});\n\nexport const nftItems = createSelector(nftFilter, nftBreakdownState, ( filters, nfts ) => {\n    let { data } = nfts;\n    const { categories, status, itemsType, collections, nftTitle } = filters;\n    \n    if(!data) {\n        return [];\n    }\n\n    if(categories.size) {\n        data = data.filter( nft => categories.has(nft.category));\n    }\n    if(status.size) {\n        data = data.filter( nft => status.has(nft.status));\n    }\n    if(itemsType.size) {\n        data = data.filter( nft => itemsType.has(nft.item_type));\n    }\n    if(collections.size) {\n        data = data.filter( nft => collections.has(nft.collections));\n    }\n    if(nftTitle.trim().length) {\n        let pattern = new RegExp(`${nftTitle.trim()}`, 'gi');\n        console.log(pattern)\n        data = data.filter( nft => nft.title.match(pattern));\n    }\n\n    return data;\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}