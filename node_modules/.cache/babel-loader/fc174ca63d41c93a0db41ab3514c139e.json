{"ast":null,"code":"import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\nexport const defaultState = {\n  nftBreakdown: initEntityState(null),\n  nftDetail: initEntityState(null),\n  nftShowcase: initEntityState(null)\n};\nconst states = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case getType(actions.getNftBreakdown.request):\n      return {\n        ...state,\n        nftBreakdown: entityLoadingStarted(state.nftBreakdown, action.payload)\n      };\n    case getType(actions.getNftBreakdown.success):\n      //append existing data with new data\n      let payload = state.nftBreakdown.data ? [...state.nftBreakdown.data, ...action.payload] : action.payload;\n      return {\n        ...state,\n        nftBreakdown: entityLoadingSucceeded(state.nftBreakdown, payload)\n      };\n    case getType(actions.getNftBreakdown.failure):\n      return {\n        ...state,\n        nftBreakdown: entityLoadingFailed(state.nftBreakdown)\n      };\n    case getType(actions.getNftDetail.request):\n      return {\n        ...state,\n        nftDetail: entityLoadingStarted(state.nftDetail, action.payload)\n      };\n    case getType(actions.getNftDetail.success):\n      return {\n        ...state,\n        nftDetail: entityLoadingSucceeded(state.nftDetail, action.payload)\n      };\n    case getType(actions.getNftDetail.failure):\n      return {\n        ...state,\n        nftDetail: entityLoadingFailed(state.nftDetail)\n      };\n    case getType(actions.getNftShowcase.request):\n      return {\n        ...state,\n        nftShowcase: entityLoadingStarted(state.nftShowcase, action.payload)\n      };\n    case getType(actions.getNftShowcase.success):\n      return {\n        ...state,\n        nftShowcase: entityLoadingSucceeded(state.nftShowcase, action.payload)\n      };\n    case getType(actions.getNftShowcase.failure):\n      return {\n        ...state,\n        nftShowcase: entityLoadingFailed(state.nftShowcase)\n      };\n    case getType(actions.clearNfts):\n      return {\n        ...state,\n        nftBreakdown: initEntityState(null)\n      };\n    default:\n      return state;\n  }\n};\nexport default states;","map":{"version":3,"names":["getType","actions","initEntityState","entityLoadingStarted","entityLoadingSucceeded","entityLoadingFailed","defaultState","nftBreakdown","nftDetail","nftShowcase","states","state","action","type","getNftBreakdown","request","payload","success","data","failure","getNftDetail","getNftShowcase","clearNfts"],"sources":["/home/dell/Documents/Market/src/store/reducers/nfts.js"],"sourcesContent":["import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  nftBreakdown: initEntityState(null),\n  nftDetail: initEntityState(null),\n  nftShowcase: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getNftBreakdown.request):\n      return { ...state, nftBreakdown: entityLoadingStarted(state.nftBreakdown, action.payload) };\n    case getType(actions.getNftBreakdown.success):\n      //append existing data with new data\n      let payload = state.nftBreakdown.data ? [...state.nftBreakdown.data, ...action.payload] : action.payload;\n      return { ...state, nftBreakdown: entityLoadingSucceeded(state.nftBreakdown, payload) };\n    case getType(actions.getNftBreakdown.failure):\n      return { ...state, nftBreakdown: entityLoadingFailed(state.nftBreakdown) };\n    \n    case getType(actions.getNftDetail.request):\n      return { ...state, nftDetail: entityLoadingStarted(state.nftDetail, action.payload) };\n    case getType(actions.getNftDetail.success):\n      return { ...state, nftDetail: entityLoadingSucceeded(state.nftDetail, action.payload) };\n    case getType(actions.getNftDetail.failure):\n      return { ...state, nftDetail: entityLoadingFailed(state.nftDetail) };\n    \n    case getType(actions.getNftShowcase.request):\n      return { ...state, nftShowcase: entityLoadingStarted(state.nftShowcase, action.payload) };\n    case getType(actions.getNftShowcase.success):\n      return { ...state, nftShowcase: entityLoadingSucceeded(state.nftShowcase, action.payload) };\n    case getType(actions.getNftShowcase.failure):\n      return { ...state, nftShowcase: entityLoadingFailed(state.nftShowcase) };\n\n    case getType(actions.clearNfts):\n      return { ...state, nftBreakdown: initEntityState(null)};\n    \n    default:\n      return state;\n  }\n};\n\nexport default states;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}