{"ast":null,"code":"import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\nexport const fetchNftsBreakdown = function (authorId) {\n  let isMusic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return async (dispatch, getState) => {\n    //access the state\n    const state = getState();\n    console.log(state);\n    dispatch(actions.getNftBreakdown.request(Canceler.cancel));\n    try {\n      let filter = authorId ? 'author=' + authorId : '';\n      let music = isMusic ? 'category=music' : '';\n      const {\n        data\n      } = await Axios.get(`${api.baseUrl}${isMusic ? '/nfts_music.json' : api.nfts}?${filter}&${music}`, {\n        cancelToken: Canceler.token,\n        params: {}\n      });\n      dispatch(actions.getNftBreakdown.success(data));\n    } catch (err) {\n      dispatch(actions.getNftBreakdown.failure(err));\n    }\n  };\n};\nexport const fetchNftShowcase = () => async dispatch => {\n  dispatch(actions.getNftShowcase.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.nftShowcases}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getNftShowcase.success(data));\n  } catch (err) {\n    dispatch(actions.getNftShowcase.failure(err));\n  }\n};\nexport const fetchNftDetail = nftId => async dispatch => {\n  dispatch(actions.getNftDetail.request(Canceler.cancel));\n  try {\n    const {\n      data\n    } = await Axios.get(`${api.baseUrl}${api.nfts}/${nftId}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n    dispatch(actions.getNftDetail.success(data));\n  } catch (err) {\n    dispatch(actions.getNftDetail.failure(err));\n  }\n};","map":{"version":3,"names":["Axios","Canceler","actions","api","fetchNftsBreakdown","authorId","isMusic","dispatch","getState","state","console","log","getNftBreakdown","request","cancel","filter","music","data","get","baseUrl","nfts","cancelToken","token","params","success","err","failure","fetchNftShowcase","getNftShowcase","nftShowcases","fetchNftDetail","nftId","getNftDetail"],"sources":["/home/dell/Documents/Market/src/store/actions/thunks/nfts.js"],"sourcesContent":["import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\nimport api from '../../../core/api';\n\nexport const fetchNftsBreakdown = (authorId, isMusic = false) => async (dispatch, getState) => {\n  \n  //access the state\n  const state = getState();\n  console.log(state);\n\n  dispatch(actions.getNftBreakdown.request(Canceler.cancel));\n\n  try {\n    let filter = authorId ? 'author='+authorId : '';\n    let music = isMusic ? 'category=music' : '';\n\n    const { data } = await Axios.get(`${api.baseUrl}${isMusic ? '/nfts_music.json' : api.nfts}?${filter}&${music}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftBreakdown.success(data));\n  } catch (err) {\n    dispatch(actions.getNftBreakdown.failure(err));\n  }\n};\n\nexport const fetchNftShowcase = () => async (dispatch) => {\n\n  dispatch(actions.getNftShowcase.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.nftShowcases}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftShowcase.success(data));\n  } catch (err) {\n    dispatch(actions.getNftShowcase.failure(err));\n  }\n};\n\nexport const fetchNftDetail = (nftId) => async (dispatch) => {\n\n  dispatch(actions.getNftDetail.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get(`${api.baseUrl}${api.nfts}/${nftId}`, {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftDetail.success(data));\n  } catch (err) {\n    dispatch(actions.getNftDetail.failure(err));\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,qBAAqB;AACrD,OAAO,KAAKC,OAAO,MAAM,eAAe;AACxC,OAAOC,GAAG,MAAM,mBAAmB;AAEnC,OAAO,MAAMC,kBAAkB,GAAG,UAACC,QAAQ;EAAA,IAAEC,OAAO,uEAAG,KAAK;EAAA,OAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAE7F;IACA,MAAMC,KAAK,GAAGD,QAAQ,EAAE;IACxBE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElBF,QAAQ,CAACL,OAAO,CAACU,eAAe,CAACC,OAAO,CAACZ,QAAQ,CAACa,MAAM,CAAC,CAAC;IAE1D,IAAI;MACF,IAAIC,MAAM,GAAGV,QAAQ,GAAG,SAAS,GAACA,QAAQ,GAAG,EAAE;MAC/C,IAAIW,KAAK,GAAGV,OAAO,GAAG,gBAAgB,GAAG,EAAE;MAE3C,MAAM;QAAEW;MAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEf,GAAG,CAACgB,OAAQ,GAAEb,OAAO,GAAG,kBAAkB,GAAGH,GAAG,CAACiB,IAAK,IAAGL,MAAO,IAAGC,KAAM,EAAC,EAAE;QAC9GK,WAAW,EAAEpB,QAAQ,CAACqB,KAAK;QAC3BC,MAAM,EAAE,CAAC;MACX,CAAC,CAAC;MAEFhB,QAAQ,CAACL,OAAO,CAACU,eAAe,CAACY,OAAO,CAACP,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZlB,QAAQ,CAACL,OAAO,CAACU,eAAe,CAACc,OAAO,CAACD,GAAG,CAAC,CAAC;IAChD;EACF,CAAC;AAAA;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAM,MAAOpB,QAAQ,IAAK;EAExDA,QAAQ,CAACL,OAAO,CAAC0B,cAAc,CAACf,OAAO,CAACZ,QAAQ,CAACa,MAAM,CAAC,CAAC;EAEzD,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEf,GAAG,CAACgB,OAAQ,GAAEhB,GAAG,CAAC0B,YAAa,EAAC,EAAE;MACpER,WAAW,EAAEpB,QAAQ,CAACqB,KAAK;MAC3BC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IAEFhB,QAAQ,CAACL,OAAO,CAAC0B,cAAc,CAACJ,OAAO,CAACP,IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZlB,QAAQ,CAACL,OAAO,CAAC0B,cAAc,CAACF,OAAO,CAACD,GAAG,CAAC,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,KAAK,IAAK,MAAOxB,QAAQ,IAAK;EAE3DA,QAAQ,CAACL,OAAO,CAAC8B,YAAY,CAACnB,OAAO,CAACZ,QAAQ,CAACa,MAAM,CAAC,CAAC;EAEvD,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEf,GAAG,CAACgB,OAAQ,GAAEhB,GAAG,CAACiB,IAAK,IAAGW,KAAM,EAAC,EAAE;MACrEV,WAAW,EAAEpB,QAAQ,CAACqB,KAAK;MAC3BC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IAEFhB,QAAQ,CAACL,OAAO,CAAC8B,YAAY,CAACR,OAAO,CAACP,IAAI,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZlB,QAAQ,CAACL,OAAO,CAAC8B,YAAY,CAACN,OAAO,CAACD,GAAG,CAAC,CAAC;EAC7C;AACF,CAAC"},"metadata":{},"sourceType":"module"}